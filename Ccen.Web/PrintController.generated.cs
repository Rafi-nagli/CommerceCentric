// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Amazon.Web.Controllers
{
    public partial class PrintController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PrintController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected PrintController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetPrintFiles()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPrintFiles);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PrintFBAPickList()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PrintFBAPickList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PrintPhotoshootPickList()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PrintPhotoshootPickList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PrintPickList()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PrintPickList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetPickListWithLocation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPickListWithLocation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetFBAPickListWithLocation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetFBAPickListWithLocation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetPhotoshootPickListWithLocation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPhotoshootPickListWithLocation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetPackingSlip()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPackingSlip);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetPackingSlipsForBatch()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPackingSlipsForBatch);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetLabelPrintFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetLabelPrintFile);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PrintController Actions { get { return MVC.Print; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Print";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Print";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string PrintFiles = "PrintFiles";
            public readonly string GetPrintFiles = "GetPrintFiles";
            public readonly string PrintFBAPickList = "PrintFBAPickList";
            public readonly string PrintPhotoshootPickList = "PrintPhotoshootPickList";
            public readonly string PrintPickList = "PrintPickList";
            public readonly string PrintPendingPickList = "PrintPendingPickList";
            public readonly string GetPickListWithLocation = "GetPickListWithLocation";
            public readonly string GetFBAPickListWithLocation = "GetFBAPickListWithLocation";
            public readonly string GetPhotoshootPickListWithLocation = "GetPhotoshootPickListWithLocation";
            public readonly string GetPackingSlip = "GetPackingSlip";
            public readonly string GetPackingSlipsForBatch = "GetPackingSlipsForBatch";
            public readonly string GetFile = "GetFile";
            public readonly string GetLabelPrintFile = "GetLabelPrintFile";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string PrintFiles = "PrintFiles";
            public const string GetPrintFiles = "GetPrintFiles";
            public const string PrintFBAPickList = "PrintFBAPickList";
            public const string PrintPhotoshootPickList = "PrintPhotoshootPickList";
            public const string PrintPickList = "PrintPickList";
            public const string PrintPendingPickList = "PrintPendingPickList";
            public const string GetPickListWithLocation = "GetPickListWithLocation";
            public const string GetFBAPickListWithLocation = "GetFBAPickListWithLocation";
            public const string GetPhotoshootPickListWithLocation = "GetPhotoshootPickListWithLocation";
            public const string GetPackingSlip = "GetPackingSlip";
            public const string GetPackingSlipsForBatch = "GetPackingSlipsForBatch";
            public const string GetFile = "GetFile";
            public const string GetLabelPrintFile = "GetLabelPrintFile";
        }


        static readonly ActionParamsClass_GetPrintFiles s_params_GetPrintFiles = new ActionParamsClass_GetPrintFiles();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetPrintFiles GetPrintFilesParams { get { return s_params_GetPrintFiles; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetPrintFiles
        {
            public readonly string request = "request";
        }
        static readonly ActionParamsClass_PrintFBAPickList s_params_PrintFBAPickList = new ActionParamsClass_PrintFBAPickList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PrintFBAPickList PrintFBAPickListParams { get { return s_params_PrintFBAPickList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PrintFBAPickList
        {
            public readonly string fbaShipmentId = "fbaShipmentId";
        }
        static readonly ActionParamsClass_PrintPhotoshootPickList s_params_PrintPhotoshootPickList = new ActionParamsClass_PrintPhotoshootPickList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PrintPhotoshootPickList PrintPhotoshootPickListParams { get { return s_params_PrintPhotoshootPickList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PrintPhotoshootPickList
        {
            public readonly string photoshootId = "photoshootId";
        }
        static readonly ActionParamsClass_PrintPickList s_params_PrintPickList = new ActionParamsClass_PrintPickList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PrintPickList PrintPickListParams { get { return s_params_PrintPickList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PrintPickList
        {
            public readonly string batchId = "batchId";
        }
        static readonly ActionParamsClass_GetPickListWithLocation s_params_GetPickListWithLocation = new ActionParamsClass_GetPickListWithLocation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetPickListWithLocation GetPickListWithLocationParams { get { return s_params_GetPickListWithLocation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetPickListWithLocation
        {
            public readonly string request = "request";
            public readonly string batchId = "batchId";
            public readonly string useOnlyAllPending = "useOnlyAllPending";
        }
        static readonly ActionParamsClass_GetFBAPickListWithLocation s_params_GetFBAPickListWithLocation = new ActionParamsClass_GetFBAPickListWithLocation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetFBAPickListWithLocation GetFBAPickListWithLocationParams { get { return s_params_GetFBAPickListWithLocation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetFBAPickListWithLocation
        {
            public readonly string request = "request";
            public readonly string batchId = "batchId";
        }
        static readonly ActionParamsClass_GetPhotoshootPickListWithLocation s_params_GetPhotoshootPickListWithLocation = new ActionParamsClass_GetPhotoshootPickListWithLocation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetPhotoshootPickListWithLocation GetPhotoshootPickListWithLocationParams { get { return s_params_GetPhotoshootPickListWithLocation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetPhotoshootPickListWithLocation
        {
            public readonly string request = "request";
            public readonly string batchId = "batchId";
        }
        static readonly ActionParamsClass_GetPackingSlip s_params_GetPackingSlip = new ActionParamsClass_GetPackingSlip();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetPackingSlip GetPackingSlipParams { get { return s_params_GetPackingSlip; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetPackingSlip
        {
            public readonly string orderId = "orderId";
        }
        static readonly ActionParamsClass_GetPackingSlipsForBatch s_params_GetPackingSlipsForBatch = new ActionParamsClass_GetPackingSlipsForBatch();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetPackingSlipsForBatch GetPackingSlipsForBatchParams { get { return s_params_GetPackingSlipsForBatch; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetPackingSlipsForBatch
        {
            public readonly string batchId = "batchId";
        }
        static readonly ActionParamsClass_GetFile s_params_GetFile = new ActionParamsClass_GetFile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetFile GetFileParams { get { return s_params_GetFile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetFile
        {
            public readonly string fileName = "fileName";
        }
        static readonly ActionParamsClass_GetLabelPrintFile s_params_GetLabelPrintFile = new ActionParamsClass_GetLabelPrintFile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetLabelPrintFile GetLabelPrintFileParams { get { return s_params_GetLabelPrintFile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetLabelPrintFile
        {
            public readonly string id = "id";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string PackingSlip = "PackingSlip";
                public readonly string PackingSlipWithCoupon = "PackingSlipWithCoupon";
                public readonly string PrintFBAPickList = "PrintFBAPickList";
                public readonly string PrintFiles = "PrintFiles";
                public readonly string PrintNamedList = "PrintNamedList";
                public readonly string PrintPhotoshootPickList = "PrintPhotoshootPickList";
                public readonly string PrintPickList = "PrintPickList";
            }
            public readonly string PackingSlip = "~/Views/Print/PackingSlip.cshtml";
            public readonly string PackingSlipWithCoupon = "~/Views/Print/PackingSlipWithCoupon.cshtml";
            public readonly string PrintFBAPickList = "~/Views/Print/PrintFBAPickList.cshtml";
            public readonly string PrintFiles = "~/Views/Print/PrintFiles.cshtml";
            public readonly string PrintNamedList = "~/Views/Print/PrintNamedList.cshtml";
            public readonly string PrintPhotoshootPickList = "~/Views/Print/PrintPhotoshootPickList.cshtml";
            public readonly string PrintPickList = "~/Views/Print/PrintPickList.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_PrintController : Amazon.Web.Controllers.PrintController
    {
        public T4MVC_PrintController() : base(Dummy.Instance) { }

        [NonAction]
        partial void PrintFilesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult PrintFiles()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PrintFiles);
            PrintFilesOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetPrintFilesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Kendo.Mvc.UI.DataSourceRequest request);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetPrintFiles(Kendo.Mvc.UI.DataSourceRequest request)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPrintFiles);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            GetPrintFilesOverride(callInfo, request);
            return callInfo;
        }

        [NonAction]
        partial void PrintFBAPickListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long fbaShipmentId);

        [NonAction]
        public override System.Web.Mvc.ActionResult PrintFBAPickList(long fbaShipmentId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PrintFBAPickList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fbaShipmentId", fbaShipmentId);
            PrintFBAPickListOverride(callInfo, fbaShipmentId);
            return callInfo;
        }

        [NonAction]
        partial void PrintPhotoshootPickListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long photoshootId);

        [NonAction]
        public override System.Web.Mvc.ActionResult PrintPhotoshootPickList(long photoshootId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PrintPhotoshootPickList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "photoshootId", photoshootId);
            PrintPhotoshootPickListOverride(callInfo, photoshootId);
            return callInfo;
        }

        [NonAction]
        partial void PrintPickListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long? batchId);

        [NonAction]
        public override System.Web.Mvc.ActionResult PrintPickList(long? batchId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PrintPickList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "batchId", batchId);
            PrintPickListOverride(callInfo, batchId);
            return callInfo;
        }

        [NonAction]
        partial void PrintPendingPickListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult PrintPendingPickList()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PrintPendingPickList);
            PrintPendingPickListOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetPickListWithLocationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Kendo.Mvc.UI.DataSourceRequest request, long? batchId, bool? useOnlyAllPending);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetPickListWithLocation(Kendo.Mvc.UI.DataSourceRequest request, long? batchId, bool? useOnlyAllPending)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPickListWithLocation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "batchId", batchId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "useOnlyAllPending", useOnlyAllPending);
            GetPickListWithLocationOverride(callInfo, request, batchId, useOnlyAllPending);
            return callInfo;
        }

        [NonAction]
        partial void GetFBAPickListWithLocationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Kendo.Mvc.UI.DataSourceRequest request, long batchId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetFBAPickListWithLocation(Kendo.Mvc.UI.DataSourceRequest request, long batchId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetFBAPickListWithLocation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "batchId", batchId);
            GetFBAPickListWithLocationOverride(callInfo, request, batchId);
            return callInfo;
        }

        [NonAction]
        partial void GetPhotoshootPickListWithLocationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Kendo.Mvc.UI.DataSourceRequest request, long batchId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetPhotoshootPickListWithLocation(Kendo.Mvc.UI.DataSourceRequest request, long batchId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPhotoshootPickListWithLocation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "batchId", batchId);
            GetPhotoshootPickListWithLocationOverride(callInfo, request, batchId);
            return callInfo;
        }

        [NonAction]
        partial void GetPackingSlipOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long orderId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetPackingSlip(long orderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPackingSlip);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            GetPackingSlipOverride(callInfo, orderId);
            return callInfo;
        }

        [NonAction]
        partial void GetPackingSlipsForBatchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long batchId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetPackingSlipsForBatch(long batchId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPackingSlipsForBatch);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "batchId", batchId);
            GetPackingSlipsForBatchOverride(callInfo, batchId);
            return callInfo;
        }

        [NonAction]
        partial void GetFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string fileName);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetFile(string fileName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileName", fileName);
            GetFileOverride(callInfo, fileName);
            return callInfo;
        }

        [NonAction]
        partial void GetLabelPrintFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetLabelPrintFile(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetLabelPrintFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            GetLabelPrintFileOverride(callInfo, id);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
