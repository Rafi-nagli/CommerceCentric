// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Amazon.Web.Controllers
{
    public partial class AmazonSyncController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AmazonSyncController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AmazonSyncController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PrintLabelsForBatch()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PrintLabelsForBatch);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetLabel()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetLabel);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetPrintResult()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPrintResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CheckPurchaseProgress()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CheckPurchaseProgress);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AmazonSyncController Actions { get { return MVC.AmazonSync; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "AmazonSync";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "AmazonSync";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string PrintLabelsForBatch = "PrintLabelsForBatch";
            public readonly string GetLabel = "GetLabel";
            public readonly string GetPrintResult = "GetPrintResult";
            public readonly string CheckPurchaseProgress = "CheckPurchaseProgress";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string PrintLabelsForBatch = "PrintLabelsForBatch";
            public const string GetLabel = "GetLabel";
            public const string GetPrintResult = "GetPrintResult";
            public const string CheckPurchaseProgress = "CheckPurchaseProgress";
        }


        static readonly ActionParamsClass_PrintLabelsForBatch s_params_PrintLabelsForBatch = new ActionParamsClass_PrintLabelsForBatch();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PrintLabelsForBatch PrintLabelsForBatchParams { get { return s_params_PrintLabelsForBatch; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PrintLabelsForBatch
        {
            public readonly string batchId = "batchId";
        }
        static readonly ActionParamsClass_GetLabel s_params_GetLabel = new ActionParamsClass_GetLabel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetLabel GetLabelParams { get { return s_params_GetLabel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetLabel
        {
            public readonly string orderId = "orderId";
        }
        static readonly ActionParamsClass_GetPrintResult s_params_GetPrintResult = new ActionParamsClass_GetPrintResult();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetPrintResult GetPrintResultParams { get { return s_params_GetPrintResult; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetPrintResult
        {
            public readonly string printActionId = "printActionId";
        }
        static readonly ActionParamsClass_CheckPurchaseProgress s_params_CheckPurchaseProgress = new ActionParamsClass_CheckPurchaseProgress();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CheckPurchaseProgress CheckPurchaseProgressParams { get { return s_params_CheckPurchaseProgress; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CheckPurchaseProgress
        {
            public readonly string batchId = "batchId";
            public readonly string progressId = "progressId";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_AmazonSyncController : Amazon.Web.Controllers.AmazonSyncController
    {
        public T4MVC_AmazonSyncController() : base(Dummy.Instance) { }

        [NonAction]
        partial void PrintLabelsForBatchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long batchId);

        [NonAction]
        public override System.Web.Mvc.ActionResult PrintLabelsForBatch(long batchId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PrintLabelsForBatch);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "batchId", batchId);
            PrintLabelsForBatchOverride(callInfo, batchId);
            return callInfo;
        }

        [NonAction]
        partial void GetLabelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long orderId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetLabel(long orderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetLabel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            GetLabelOverride(callInfo, orderId);
            return callInfo;
        }

        [NonAction]
        partial void GetPrintResultOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int printActionId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetPrintResult(int printActionId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPrintResult);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "printActionId", printActionId);
            GetPrintResultOverride(callInfo, printActionId);
            return callInfo;
        }

        [NonAction]
        partial void CheckPurchaseProgressOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long? batchId, long? progressId);

        [NonAction]
        public override System.Web.Mvc.ActionResult CheckPurchaseProgress(long? batchId, long? progressId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CheckPurchaseProgress);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "batchId", batchId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "progressId", progressId);
            CheckPurchaseProgressOverride(callInfo, batchId, progressId);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
