// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Amazon.Web.Controllers
{
    public partial class BuyBoxController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public BuyBoxController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected BuyBoxController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetIgnored()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetIgnored);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetBuyBox()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetBuyBox);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public BuyBoxController Actions { get { return MVC.BuyBox; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "BuyBox";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "BuyBox";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string SetIgnored = "SetIgnored";
            public readonly string GetBuyBox = "GetBuyBox";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string SetIgnored = "SetIgnored";
            public const string GetBuyBox = "GetBuyBox";
        }


        static readonly ActionParamsClass_SetIgnored s_params_SetIgnored = new ActionParamsClass_SetIgnored();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetIgnored SetIgnoredParams { get { return s_params_SetIgnored; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetIgnored
        {
            public readonly string id = "id";
            public readonly string isIgnored = "isIgnored";
        }
        static readonly ActionParamsClass_GetBuyBox s_params_GetBuyBox = new ActionParamsClass_GetBuyBox();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetBuyBox GetBuyBoxParams { get { return s_params_GetBuyBox; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetBuyBox
        {
            public readonly string request = "request";
            public readonly string period = "period";
            public readonly string inStock = "inStock";
            public readonly string includeIgnored = "includeIgnored";
            public readonly string market = "market";
            public readonly string marketplaceId = "marketplaceId";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Index = "Index";
            }
            public readonly string Index = "~/Views/BuyBox/Index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_BuyBoxController : Amazon.Web.Controllers.BuyBoxController
    {
        public T4MVC_BuyBoxController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SetIgnoredOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool isIgnored);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetIgnored(int id, bool isIgnored)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetIgnored);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isIgnored", isIgnored);
            SetIgnoredOverride(callInfo, id, isIgnored);
            return callInfo;
        }

        [NonAction]
        partial void GetBuyBoxOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Kendo.Mvc.UI.DataSourceRequest request, int? period, bool? inStock, bool? includeIgnored, int market, string marketplaceId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetBuyBox(Kendo.Mvc.UI.DataSourceRequest request, int? period, bool? inStock, bool? includeIgnored, int market, string marketplaceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetBuyBox);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "period", period);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "inStock", inStock);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "includeIgnored", includeIgnored);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "market", market);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "marketplaceId", marketplaceId);
            GetBuyBoxOverride(callInfo, request, period, inStock, includeIgnored, market, marketplaceId);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
