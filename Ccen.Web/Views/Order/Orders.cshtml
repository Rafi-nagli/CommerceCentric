@using Amazon.Common.Helpers
@using Amazon.Core.Entities.Enums
@using Amazon.Core.Models
@using Amazon.Core.Models.Settings
@using Amazon.Core.Models.Stamps
@using Amazon.Web
@using Amazon.Web.ViewModels
@using Amazon.Web.Models
@using Amazon.Model.Implementation.Markets;
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Orders";
    if (Model.DefaultMarket == MarketType.eBay)
    {
        ViewBag.Title = "eBay Orders";
    }
    if (Model.DefaultMarket == MarketType.Magento)
    {
        ViewBag.Title = "Magento Orders";
    }
    if (Model.DefaultMarket == MarketType.Walmart)
    {
        ViewBag.Title = "Walmart Orders";
    }
    if (Model.DefaultMarket == MarketType.WalmartCA)
    {
        ViewBag.Title = "Walmart CA Orders";
    }
    if (Model.DefaultMarket == MarketType.Jet)
    {
        ViewBag.Title = "Jet Orders";
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model Amazon.Web.ViewModels.Pages.OrderPageViewModel

@section Icon
{
    <link rel="shortcut icon" href="/Content/Images/orders.ico" />
}

    <div class="orders" id="page-content">
        <div style="float: left">
            <h1>
                <a href="javascript:;" data-bind="click: setDefaultMarket">Orders</a>
                - <span data-bind="text: allOrdersCount"></span>
                @if (AccessManager.IsAdmin)
                {
                    <span style="font-size: 16px">(<span data-bind="textFormatted: allOrdersCost, pattern: '$#,##0.00', ifEmpty: '-'"></span>)</span>
                }
            </h1>
        </div>

        <div data-bind="foreach: countByMarket" style="font-size: 15px; margin-left: 15px; margin-top: 25px; float: left">
            <table data-bind="css: { 'market-higtlight': isSelected}" style="float: left; ">
                <tr>
                    <td>
                        <a href='javascript:;' style="padding-left: 4px; margin-left: 8px; padding-bottom: 2px; text-decoration: none;" class="flag-link" data-bind="css: flagCss, click: setMarket"></a>
                    </td>
                    <td>
                        <a href='javascript:;' style="padding-left: 4px; text-decoration: none" data-bind="click: setMarket">
                            - <span data-bind="text: count"></span><span data-bind="if: ($index() != ($parent.countByMarket().length - 1))">,</span>
                        </a>
                    </td>
                </tr>
            </table>
        </div>
        <div class="clear"></div>

        @if (AccessManager.IsFulfilment)
        {
            <div class="panel panel-default">
                <div class="filters">

                    <table style="width: 100%">
                        <colgroup>
                            <col style="width: 140px" />
                            <col style="width: 140px" />
                            <col style="width: 150px" />
                            <col style="width: 120px" />
                            <col style="" />
                            <col style="width: 170px" />
                            <col style="width: 150px" />
                        </colgroup>
                        <tr>
                            <td>
                                <a class="k-button"
                                   target="_blank"
                                   href="@Url.Action(MVC.Print.PrintPickList())">
                                    <span class="glyphicon glyphicon-list am-icon"></span>Orders Preview
                                </a>
                            </td>
                            @if (AccessManager.CanEditBatch())
                            {
                                <th class="right-block">Batches: </th>
                                <td>
                                    <input style="width: 180px" data-bind="kendoDropDownList: { data: activeBatchList, value: activeBatch, dataTextField: 'Text', dataValueField: 'Value' }" />
                                </td>
                                <td>
                                    <button class="k-button"
                                            data-bind="click: addToBatch">
                                        Add to batch
                                    </button>
                                </td>
                                <td></td>
                            }
                            @if (AccessManager.CanUpgradeOrder())
                            {
                                <td class="right-content">
                                    <div>
                                        @*<button class="k-button"
                                                data-bind="click: onSetShippingService"
                                                style="margin: 0px 0px 0 0; padding: 3px 10px 3px 10px">
                                            <span class='glyphicon glyphicon-calc am-icon'></span>Change Service...
                                        </button>*@
                                    </div>
                                </td>
                                <td class="right-content">
                                    <div>
                                        <button class="k-button"
                                                data-bind="click: onReCalcShippingService"
                                                style="margin: 0px 0px 0 0; padding: 3px 20px 3px 20px">
                                            <span class='glyphicon glyphicon-calc am-icon'></span>Recalculate
                                        </button>
                                    </div>
                                </td>
                                @*<td class="right-content">
                                    <div>
                                        <button class="k-button"
                                                data-bind="click: onUpgradeShippingService"
                                                disabled="disabled"
                                                style="margin: 0px 10px 0 0; padding: 3px 20px 3px 20px">
                                            <span class='glyphicon glyphicon-upgrade am-icon'></span>Upgrade
                                        </button>
                                    </div>
                                </td>*@
                            }
                        </tr>
                    </table>

                    <div class="messages-block">
                        <div><span id="infoMessage" class="text-info"></span></div>
                        <div><span id="errorMessage" class="label label-danger"></span></div>
                        <div><span id="successMessage" class="label label-success"></span></div>
                    </div>

                    <details class="warning-list" data-bind="visible: unprintedOrdersCount() != 0">
                        <summary>Unprinted labels: <span data-bind="text: unprintedOrdersCount"></span></summary>
                        <div data-bind='foreach: unprintedOrderList' class="block-items">
                            <div class="text-danger">
                                <a href="javascript:;" data-bind="click: function(data, event) { $root.onEditOrder(data.entityId); }"><span data-bind="text: orderId"></span></a> - <span data-bind="text: message"></span>
                            </div>
                        </div>
                    </details>
                    @if (AccessManager.CanEditOrder())
                    {
                        <details class="warning-list" data-bind="visible: invalidAddressOrdersCount() != 0">
                            <summary>Order address with warnings: <span data-bind="text: invalidAddressOrdersCount"></span></summary>
                            <div data-bind='foreach: invalidAddressOrderList' class="block-items">
                                <div>
                                    <a href="javascript:;" data-bind="css: { 'danger-text': isWarning, 'bold': isBold }, click: function(data, event) { $root.onEditOrder(data.entityId); }"><span data-bind="text: orderId"></span></a>
                                    &nbsp;<span data-bind="html: message"></span>
                                </div>
                            </div>
                        </details>
                    }
                </div>
            </div>
        }

        <div class="panel panel-default">
            <div class="filters">
                <table>
                    <colgroup>
                        <col style="width: 80px" />
                        <col style="width: 190px" />
                        <col style="width: 100px" />
                        <col style="width: 450px" />
                    </colgroup>
                    <tr>
                        <th>Filter: </th>
                        <td>
                            <input style="width:180px; font-size: 12px" data-bind="kendoDropDownList: { data: shippingStatusList, value: shippingStatus, dataTextField: 'Text', dataValueField: 'Value' }" />
                        </td>
                        <th class="right-content">Order Date: </th>
                        <td>
                            <table>
                                <tr>
                                    <th>From</th>
                                    <td>
                                        <input data-bind="kendoDatePicker: { value: dateFrom, format: 'MM/dd/yyyy', min: minDate, max: maxDate }" />
                                    </td>
                                    <th>To</th>
                                    <td>
                                        <input data-bind="kendoDatePicker: { value: dateTo, format: 'MM/dd/yyyy', min: minDate, max: maxDate }" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <th class="right-content">Bay: </th>
                        <td>
                            <input id="BayNumber"
                                   style="width:180px"
                                   data-bind="kendoDropDownList: {data: bayList, value: bayNumber, dataTextField: 'Text', dataValueField: 'Value' }" />
                        </td>
                        <th class="right-content">Max Orders: </th>
                        <td>
                            <input type="text" data-bind="value: maxOrders,
                            event: { keypress: searchByKeyCmd }" class="k-textbox" />
                        </td>
                    </tr>
                </table>
                <table>
                    <colgroup>
                        <col style="width: 80px" />
                        <col style="width: 190px" />
                        <col style="width: 100px" />
                        <col style="width: 190px" />
                        <col style="width: 80px" />
                        <col style="width: 210px" />
                        <col style="width: 90px" />
                        <col style="width: 190px" />
                    </colgroup>
                    <tr>
                        <th>Market:</th>
                        <td>
                            <input id="SearchMarket"
                                   style="width:180px"
                                   data-bind="kendoDropDownList: {data: marketList, value: marketValue, dataTextField: 'Text', dataValueField: 'Value' }" />
                        </td>
                        <th>Recipient / Buyer / Phone:</th>
                        <td>
                            <input type="text" data-bind="value: buyerName,
                            valueUpdate: 'afterkeydown',
                            event: { keypress: searchByKeyCmd }" class="k-textbox" />
                        </td>
                        <th class="right-content">Order #:</th>
                        <td>
                            <div class="input-group history-button">
                                <div class="input-group-btn">
                                    <button type="button" class="btn btn-primary dropdown-toggle"
                                            data-bind="event: { mouseover: searchHistory.init }"
                                            data-toggle="dropdown"
                                            aria-haspopup="true"
                                            aria-expanded="false">
                                        <span class='glyphicon glyphicon-menu am-icon'
                                              style="font-size: 14px">
                                        </span>
                                        <span class="caret"></span>
                                    </button>
                                    <ul class="dropdown-menu" data-bind="foreach: searchHistory.lastSearchedOrderIdList">
                                        <li data-bind="click: function() { $root.searchHistory.setSearchOrderId($data) }">
                                            <a href="#" data-bind="text: $data"></a>
                                        </li>
                                    </ul>
                                </div>

                                <input type="text"
                                       style="width: 180px"
                                       data-bind="kendoAutoComplete: {
                                            value: orderNumber,
                                            data: {},
                                            highlightFirst: true,
                                            minLenght: 3,
                                            dataSource: orderIdSource },
                                        valueUpdate: 'afterkeydown',
                                        event: { keypress: searchByKeyCmd }"
                                       class="k-textbox" />
                            </div>
                        </td>
                        <th class="right-content">Style ID:</th>
                        <td>
                            <input type="text"
                                   style="width: 180px"
                                   data-bind="kendoAutoComplete: {
                                   value: styleId,
                                   data: {},
                                   minLenght: 3,
                                    highlightFirst: true,
                                   dataSource: styleIdSource },
                                valueUpdate: 'afterkeydown',
                                event: { keypress: searchByKeyCmd }"
                                   class="k-textbox" />
                        </td>
                    </tr>
                </table>
                @if (AccessManager.Company.ShortName == "PA") 
                {
                    <table>
                        <tr>
                            <th>DropShipper: </th>
                            <td>
                                <input style="width:180px" data-bind="kendoDropDownList: { data: dropShipperList, value: dropShipperId, dataTextField: 'Text', dataValueField: 'Value', optionLabel: 'Select...' }" />
                            </td>
                        </tr>
                    </table>
                }
                <button class="k-button"
                        style="margin: 5px 10px 0px 0px; padding: 3px 20px 3px 20px"
                        data-bind="click: searchByButton">
                    <span class='glyphicon glyphicon-search am-icon'></span>Search
                </button>
                <button class="k-button"
                        style="margin: 5px 10px 0px 0px; padding: 3px 20px 3px 20px"
                        data-bind="click: clearAndSearch">
                    <span class='glyphicon glyphicon-ban-circle am-icon'></span>Clear
                </button>
            </div>
        </div>

        <div class="k-toolbar k-grid-toolbar">
            <div>
                <table>
                    <tr>
                        <td>
                            <div>
                                <span class="toolbar-label" style="font-size: 15px;">
                                    <span>Checked:</span>
                                    <span class="number" data-bind="text: checkedCount">0</span> / <span class="number count" data-bind="text: grid.itemCount">0</span>

                                    <span class="gray">(intl: <span data-bind="textFormatted: checkedOrdersWeightLb, pattern: '0.00'">0</span> Lb / <span data-bind="textFormatted: allOrdersWeightLb, pattern: '0.00'">0</span> Lb)</span>
                                </span>
                            </div>
                            <div style="padding-top:4px">
                                <span class="toolbar-label">
                                    <span>
                                        <a href="javascript:;"
                                           data-bind="click: checkAllOnAllPages">check all</a>
                                        <span class='gray'> (on all pages)</span>
                                    </span>
                                    <span> / </span>
                                    <span>
                                        <a href="javascript:;"
                                           data-bind="click: unCheckAllOnAllPages">uncheck all</a>
                                        <span class='gray'> (on all pages)</span>
                                    </span>
                                </span>
                            </div>
                        </td>
                        <td style="padding-left: 50px">
                            <table class="toolbar-label">
                                <tr>
                                    <td style="text-align:right">
                                        <span class="gray">Bays:</span>
                                    </td>
                                    <td colspan="7">
                                        <!-- ko foreach: countByBay -->
                                        <a class="toolbar-link"
                                           style="margin-right: 10px"
                                           data-bind="click: function() { $root.setBay(Value) }, css: { 'label label-info' : $root.isBaySelected(Value) }">
                                            <span>Bay <span data-bind="text: Value"></span>:</span>
                                            <span data-bind="text: count" class="number"></span>
                                        </a>
                                        <!-- /ko -->
                                    </td>                                    
                                    <td></td>
                                </tr>
                                <tr>
                                    <td style="text-align:right">
                                        <span class="gray">Issues:</span>
                                    </td>
                                    <td>
                                        <a class="toolbar-link"
                                           data-bind="click: function() { setFilter('WithAddressIssues') }, css: { 'label label-info' : isWithAddressIssuesFilter }">
                                            <span>Address Issue:</span>
                                            <span data-bind="text: invalidAddressOrdersCount" class="number"></span>
                                        </a>
                                    </td>
                                    <td>
                                        <a class="toolbar-link"
                                           data-bind="click: function() { setFilter('OnHold') }, css: {  'label label-info' : isOnHoldFilter }">
                                            <span>On Hold:</span>
                                            <span data-bind="text: onHoldOrdersCount" class="number"></span>
                                        </a>
                                    </td>
                                    <td>
                                        <a class="toolbar-link"
                                           data-bind="click: function() { setFilter('Duplicate') }, css: { 'label label-info' : isDuplicateFilter }">
                                            <span>Duplicate:</span>
                                            <span data-bind="text: duplicateOrdersCount" class="number"></span>
                                        </a>
                                    </td>
                                    <td>
                                        <a class="toolbar-link"
                                           data-bind="click: function() { setFilter('WoPackage') }, css: { 'label label-info' : isWoPackageFilter }">
                                            <span>W/o package:</span>
                                            <span data-bind="text: withoutPackageOrdersCount" class="number"></span>
                                        </a>
                                    </td>
                                    <td>
                                        <a class="toolbar-link"
                                           data-bind="click: function() { setFilter('WoStampsPrice') }, css: { 'label label-info' : isWoStampsPriceFilter }">
                                            <span>W/o stamps price:</span>
                                            <span data-bind="text: withoutStampsPriceOrdersCount" class="number"></span>
                                        </a>
                                    </td>
                                    <td>
                                        <a class="toolbar-link"
                                           data-bind="click: function() { setFilter('OverdueShipDate') }, css: { 'label label-info' : isOverdueShipDateFilter }">
                                            <span>Overdue:</span>
                                            <span data-bind="text: overdueShipDateOrdersCount" class="number"></span>
                                        </a>
                                    </td>
                                    <td>
                                        <a class="toolbar-link"
                                           data-bind="click: function() { setFilter('Oversold') }, css: { 'label label-info' : isOversoldFilter }">
                                            <span>Oversold:</span>
                                            <span data-bind="text: oversoldOrdersCount" class="number"></span>
                                        </a>
                                    </td>
                                    <td>
                                        <a class="toolbar-link"
                                           data-bind="click: function() { setFilter('WithNewStyles') }, css: { 'label label-info' : isWithNewStylesFilter }">
                                            <span>New Styles:</span>
                                            <span data-bind="text: withNewStylesOrdersCount" class="number"></span>
                                        </a>
                                    </td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td>
                                        <span class="gray">Statistics:</span>
                                    </td>
                                    <td>
                                        <a class="toolbar-link"
                                           data-bind="click: function() { setFilter('TodayShipDate') }, css: { 'label label-info' : isTodayShipDateFilter }">
                                            <span>Today:</span>
                                            <span data-bind="text: todayShipDateOrdersCount" class="number"></span>
                                        </a>
                                    </td>
                                    <td>
                                        <a class="toolbar-link"
                                           data-bind="click: function() { setFilter('SameDay') }, css: { 'label label-info' : isSameDayFilter }">
                                            <span>Same Day:</span>
                                            <span data-bind="text: sameDayOrdersCount" class="number"></span>
                                        </a>
                                    </td>
                                    <td>
                                        <a class="toolbar-link"
                                           data-bind="click: function() { setFilter('DHL') }, css: { 'label label-info' : isDhlFilter }">
                                            <span>DHL:</span>
                                            <span data-bind="text: dhlOrdersCount" class="number"></span>
                                        </a>
                                    </td>
                                    @*<td>
            <a class="toolbar-link"
               data-bind="click: function() { setFilter('DHLECom') }, css: { 'label label-info' : isDhlEComFilter }">
                <span>DHL eCom:</span>
                <span data-bind="text: dhlEComOrdersCount" class="number"></span>
            </a>
        </td>*@
                                    <td>
                                        <a class="toolbar-link"
                                           data-bind="click: function() { setFilter('IBC') }, css: { 'label label-info' : isIBCFilter }">
                                            <span>IBC:</span>
                                            <span data-bind="text: ibcOrdersCount" class="number"></span>
                                        </a>
                                    </td>
                                    <td>
                                        <a class="toolbar-link"
                                           data-bind="click: function() { setFilter('SKYPOSTAL') }, css: { 'label label-info' : isSkyPostalFilter }">
                                            <span>SkyPostal:</span>
                                            <span data-bind="text: skyPostalOrdersCount" class="number"></span>
                                        </a>
                                    </td>
                                    <td>
                                        <a class="toolbar-link"
                                           data-bind="click: function() { setFilter('FedexOneRate') }, css: { 'label label-info' : isFedexOneRateFilter }">
                                            <span>Fedex:</span>
                                            <span data-bind="text: fedexOneRateOrdersCount" class="number"></span>
                                        </a>
                                    </td>
                                    <td>
                                        <a class="toolbar-link"
                                           data-bind="click: function() { setFilter('PrimeOrSecondDay') }, css: { 'label label-info' : isPrimeOrSecondDayFilter }">
                                            <span>Prime/Second Day:</span>
                                            <span data-bind="text: primeOrSecondDayOrdersCount" class="number"></span>
                                        </a>
                                    </td>
                                    <td>
                                        <a class="toolbar-link"
                                           data-bind="click: function() { setFilter('MiamiArea') }, css: { 'label label-info' : isMiamiAreaFilter }">
                                            <span>Miami Area:</span>
                                            <span data-bind="text: miamiAreaOrdersCount" class="number"></span>
                                        </a>
                                    </td>
                                    <td>
                                        <a class="toolbar-link"
                                           data-bind="click: function() { setFilter('Upgraded') }, css: { 'label label-info' : isUpgradedFilter }">
                                            <span>Upgraded:</span>
                                            <span data-bind="text: upgradedOrdersCount" class="number"></span>
                                        </a>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </div>
        </div>

        <div class="orders-grid">

            <div data-bind='component: {
            name: "grid-pager",
            params: { itemCount: grid.itemCount, pageIndex: grid.pageIndex, itemsPerPage: grid.itemsPerPage, refreshCallback: grid.reload }
        }'></div>

            <div data-bind='component: {
             name: "fast-grid",
             params: fastGridSettings }'></div>

            <div data-bind='component: {
            name: "grid-pager",
            params: { itemCount: grid.itemCount, pageIndex: grid.pageIndex, itemsPerPage: grid.itemsPerPage, refreshCallback: grid.reload }
        }'></div>
        </div>
    </div>

<script type="text/kendo-tmpl" id="order-row-template0">
    <tr class="k-master-row #=data._isAlt ? 'k-alt': ''#" row-uid="#=data.Id#">
        <td><input class='check_row' type='checkbox' onclick='javascript: batch.checkOne(this, "#=data.EntityId#")' /></td>
        <td><span class='row-number'></span></td>
        <td>#= tmpl.t('status-column-template', data)# #= tmpl.t('order-info-column-template', data)#</td>
        <td>#= tmpl.t('orderid-column-template', data)# #= tmpl.t('tracking-column-template', data)# #= tmpl.t('buyer-column-template', data)#</td>
        <td><span>#=data.TotalItemQuantity#</span> @*#if (data.TotalItemQuantity != data.Quantity) {# <span> (#=data.Quantity#)</span> #}# *@</td>
        <td>#= tmpl.t('servicetype-column-template', data)#</td>
        <td>#=data.ShippingCountry#</td>
        <td>#= tmpl.t('price-column-template', data)#</td>
        <td>#= tmpl.t('weight-column-template', data)#</td>
        <td>#= tmpl.t('stampscost-column-template', data) #</td>
        <td>
            <div>#=tmpl.isNullFormat(data.AlignedExpectedShipDate, 'MM.dd.yyyy HH:mm', '-')#</div>
            <div class="note"><div>Exp. Delivery:</div> #=tmpl.isNullFormat(data.AlignedExpDeliveryDate, 'MM.dd.yyyy HH:mm', '-')#</div>
        </td>
        <td>#=tmpl.f(data.OrderDate, 'MM.dd.yyyy HH:mm')#</td>
        @if (AccessManager.CanEditOrder())
        {
            <td rowspan="#=data.Items.length + 1#">
                #= tmpl.t('get-label-column-template', data) #
                #= tmpl.t('view-label-column-template', data) #
                #= tmpl.t('buttons-column-template', data) #
                #= tmpl.t('batchname-column-template', data) #
            </td>
        }
        else
        {
            <td rowspan="#=data.Items.length + 1#">
                #= tmpl.t('view-label-column-template', data) #
                #= tmpl.t('view-buttons-column-template', data) #
                #= tmpl.t('batchname-column-template', data) #
            </td>
        }
        <td rowspan="#=data.Items.length + 1#">#= tmpl.t('comment-column-template', data) #</td>
    </tr>
    #for (var i = 0; i < data.Items.length; i++) {#
    <tr class="k-detail-row #=data._isAlt ? 'k-alt': ''#" row-uid="#=data.Id#">
        <td></td>
        <td></td>
        <td>#= tmpl.t('order-item-image-column-template', data.Items[i])#</td>
        <td>#= tmpl.t('order-item-buyer-column-template', data.Items[i])#</td>
        <td>#= data.Items[i].Quantity#</td>
        <td></td>
        <td></td>
        <td>#= tmpl.t('order-item-price-column-template', data.Items[i])#</td>
        <td><div>#=data.Items[i].WeightString#</div></td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
    </tr>
    #}#
</script>

@Html.Partial(MVC.Shared.Views._TemplatesOrder)
@Html.Partial("_TemplateGridPager")
@Html.Partial("_TemplateFastGrid")
@Html.Partial("_SetBulkShipping")


<script>
    var batch = null;

    $(document).ready(function () {
        console.log("begin ready");

        var batches = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(OptionsHelper.ActiveBatches));
        var marketList = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(OptionsHelper.MarketList));

        var settings = {
            isAdmin: @(AccessManager.IsAdmin ? 1 : 0),
            isDemo: @(Ccen.Web.AppSettings.IsDemo ? 1 : 0),

            markets: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(MarketHelper.GetOrderPageMarketplaces())),

            comMarket: @((int) MarketType.Amazon),
            ukMarket: @((int) MarketType.AmazonEU),
            auMarket: @((int) MarketType.AmazonAU),
            eBayMarket: @((int) MarketType.eBay),
            magentoMarket: @((int) MarketType.Magento),
            walmartMarket: @((int) MarketType.Walmart),
            walmartCAMarket: @((int) MarketType.WalmartCA),
            jetMarket: @((int) MarketType.Jet),
            marketNames: {
                groupon: @((int)MarketType.Groupon)
            },

            caMarketplaceId: '@MarketplaceKeeper.AmazonCaMarketplaceId',
            mxMarketplaceId: '@MarketplaceKeeper.AmazonMxMarketplaceId',
            ukMarketplaceId: '@MarketplaceKeeper.AmazonUkMarketplaceId',
            comMarketplaceId: '@MarketplaceKeeper.AmazonComMarketplaceId',

            providerTypeList: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ShipmentProviderHelper.GetAllProviderList())),

            shippedOrderStatus: '@(OrderStatusEnumEx.Shipped)',
            canceledOrderStatus: '@(OrderStatusEnumEx.Canceled)',

            shippingNames: {
                sameDay: '@(ShippingUtils.SameDayServiceName)',
                secondDay: '@(ShippingUtils.SecondDayServiceName)',
                nextDay: '@(ShippingUtils.NextDayServiceName)'
            },

            defaultMarket: @((int)Model.DefaultMarket),
            defaultMarketplaceId: '@(Model.DefaultMarketplaceId)',
            defaultDropShipperId: '@(Model.DefaultDropShipperId)',
            batchList: batches,

            marketList: marketList,
            bayList: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(OrderSearchFilterViewModel.BayList)),
            shippingStatusList: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(OrderSearchFilterViewModel.StatusList)),
            dropShipperList: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(OptionsHelper.DropShipperList)),


            getOrderByIdUrl: '@Url.Action("GetOrderById", "Order")',
            getOrdersUrl: '@Url.Action("GetOrders", "Order")',
            searchHistoryUrl: '@Url.Action("GetSearchHistory", "Order")',
            editOrderUrl: '@Url.Action(MVC.Order.OnEditOrder())',
            setShippingOptionsUrl: '@Url.Action(MVC.Order.SetShippingOptions())',
            upgradeShippingServiceUrl: '@Url.Action(MVC.Batch.UpgradeShippingService())',
            recalcShippingServiceUrl: '@Url.Action(MVC.Batch.ReCalcShippingService())',
            setOnHoldUrl:  '@Url.Action(MVC.Order.SetOnHold())',
            getOrderIdListUrl:  '@Url.Action("GetOrderIdList", "AutoComplete")',
            getStyleIdListUrl: '@Url.Action("GetStyleIdList", "AutoComplete")',
            getStyleSizeListUrl: '@Url.Action("GetStyleSizes", "AutoComplete")',
            viewCommentsUrl: '@Url.Action("OnViewComments", "Order")',

            checkPurchaseProgressUrl: '@Url.Action(MVC.AmazonSync.CheckPurchaseProgress())',
            printLabelsForBatchUrl: '@Url.Action(MVC.AmazonSync.PrintLabelsForBatch())',
            getPackingSlipUrl: '@Url.Action(MVC.Print.GetPackingSlipsForBatch())',

            setDismissAddressValidationUrl: '@Url.Action(MVC.Order.SetDismissAddressValidationError())',
            activeBatchUrl: '@Url.Action(MVC.Batch.ActiveBatches())',
            createBatchUrl: '@Url.Action("CreateBatch", "Batch")',
            addOrdersToBatchUrl: '@Url.Action("AddOrdersToBatch", "Batch")',
            checkAddOrdersToBatchUrl: '@Url.Action("CheckAddOrdersToBatch", "Batch")',

            removeFromBatchMultiUrl: '@Url.Action(MVC.Batch.RemoveMultipleFromBatch())',
            removeFromBatchUrl: '@Url.Action("RemoveFromBatch", "Batch")',
            getDayBatchNumberUrl: '@Url.Action("GetDayBatchNumber", "Batch")',


            duplicateNotifyType: '@((int) OrderNotifyType.Duplicate)',
            addressCheckStampsNotifyType: '@((int)OrderNotifyType.AddressCheckStamps)',
            addressCheckGoogleNotifyType: '@((int)OrderNotifyType.AddressCheckGoogleGeocode)',

            unshippedOrderStatus: '@OrderStatusEnumEx.Unshipped',

            addressValidationStatus: {
                valid: '@((int) AddressValidationStatus.Valid)',
                invalid: '@((int)AddressValidationStatus.Invalid)',
                invalidRecipientName: '@((int)AddressValidationStatus.InvalidRecipientName)',
                exception: '@((int) AddressValidationStatus.Exception)',
                exceptionCommunication: '@((int) AddressValidationStatus.ExceptionCommunication)',
                dhlAddressLengthExceeded: '@((int) AddressValidationStatus.DhlAddressLengthExceeded)',
                missingPhoneNumber: '@((int) AddressValidationStatus.MissingPhoneNumber)'
            },

            shipmentProviderTypes: {
                dhl: '@((int) ShipmentProviderType.Dhl)',
                dhlECom: '@((int) ShipmentProviderType.DhlECom)',
                ibc: '@((int)ShipmentProviderType.IBC)',
                skyPostal: '@((int)ShipmentProviderType.SkyPostal)',
                stamps: '@((int) ShipmentProviderType.Stamps)',
                amazon: '@((int) ShipmentProviderType.Amazon)',
                fedexOneRate: '@((int) ShipmentProviderType.FedexOneRate)',
                fedexStandardRate: '@((int) ShipmentProviderType.FedexGeneral)',
                fedexSmartPostRate: '@((int) ShipmentProviderType.FedexSmartPost)'
            },

            shippingMethodIds: {
                sameDay: '@((int)ShippingUtils.DynamexPTPSameShippingMethodId)',
                dhl: '@((int)ShippingUtils.DhlExpressWorldWideShippingMethodId)',
                dhlMx: '@((int)ShippingUtils.AmazonDhlExpressMXShippingMethodId)',
            },            
        };

        var model = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
        model.batchId = 0;
        model.batchNumber = 0;

        batch = new BatchModel('OrderListGrid', model, settings);
        batch.load();
        ko.applyBindings(batch, document.getElementById("page-content"));
    });
</script>
