// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Amazon.Web.Controllers
{
    public partial class InventoryController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public InventoryController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected InventoryController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Styles()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Styles);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateStyle()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateStyle);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetOnHold()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetOnHold);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult StyleHistory()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.StyleHistory);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetStyleHistory()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetStyleHistory);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetStylePopoverInfo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetStylePopoverInfo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteStyle()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteStyle);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CreateStyle()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateStyle);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetAllUpdates()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAllUpdates);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetIdListByFilters()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetIdListByFilters);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetAll()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAll);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Submit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Submit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ChangeStyleItem()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeStyleItem);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RemoveStyleItems()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RemoveStyleItems);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult MergeStyleItems()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MergeStyleItems);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CheckStyleId()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CheckStyleId);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CheckStyleItem()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CheckStyleItem);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetSizesInfo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetSizesInfo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetGeneratedFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetGeneratedFile);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public InventoryController Actions { get { return MVC.Inventory; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Inventory";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Inventory";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Styles = "Styles";
            public readonly string UpdateStyle = "UpdateStyle";
            public readonly string SetOnHold = "SetOnHold";
            public readonly string StyleHistory = "StyleHistory";
            public readonly string GetStyleHistory = "GetStyleHistory";
            public readonly string GetStylePopoverInfo = "GetStylePopoverInfo";
            public readonly string DeleteStyle = "DeleteStyle";
            public readonly string CreateStyle = "CreateStyle";
            public readonly string GetAllUpdates = "GetAllUpdates";
            public readonly string GetIdListByFilters = "GetIdListByFilters";
            public readonly string GetAll = "GetAll";
            public readonly string Submit = "Submit";
            public readonly string ChangeStyleItem = "ChangeStyleItem";
            public readonly string RemoveStyleItems = "RemoveStyleItems";
            public readonly string MergeStyleItems = "MergeStyleItems";
            public readonly string CheckStyleId = "CheckStyleId";
            public readonly string CheckStyleItem = "CheckStyleItem";
            public readonly string GetSizesInfo = "GetSizesInfo";
            public readonly string GetGeneratedFile = "GetGeneratedFile";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Styles = "Styles";
            public const string UpdateStyle = "UpdateStyle";
            public const string SetOnHold = "SetOnHold";
            public const string StyleHistory = "StyleHistory";
            public const string GetStyleHistory = "GetStyleHistory";
            public const string GetStylePopoverInfo = "GetStylePopoverInfo";
            public const string DeleteStyle = "DeleteStyle";
            public const string CreateStyle = "CreateStyle";
            public const string GetAllUpdates = "GetAllUpdates";
            public const string GetIdListByFilters = "GetIdListByFilters";
            public const string GetAll = "GetAll";
            public const string Submit = "Submit";
            public const string ChangeStyleItem = "ChangeStyleItem";
            public const string RemoveStyleItems = "RemoveStyleItems";
            public const string MergeStyleItems = "MergeStyleItems";
            public const string CheckStyleId = "CheckStyleId";
            public const string CheckStyleItem = "CheckStyleItem";
            public const string GetSizesInfo = "GetSizesInfo";
            public const string GetGeneratedFile = "GetGeneratedFile";
        }


        static readonly ActionParamsClass_Styles s_params_Styles = new ActionParamsClass_Styles();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Styles StylesParams { get { return s_params_Styles; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Styles
        {
            public readonly string styleId = "styleId";
        }
        static readonly ActionParamsClass_UpdateStyle s_params_UpdateStyle = new ActionParamsClass_UpdateStyle();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateStyle UpdateStyleParams { get { return s_params_UpdateStyle; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateStyle
        {
            public readonly string id = "id";
            public readonly string itemType = "itemType";
        }
        static readonly ActionParamsClass_SetOnHold s_params_SetOnHold = new ActionParamsClass_SetOnHold();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetOnHold SetOnHoldParams { get { return s_params_SetOnHold; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetOnHold
        {
            public readonly string id = "id";
            public readonly string onHold = "onHold";
        }
        static readonly ActionParamsClass_StyleHistory s_params_StyleHistory = new ActionParamsClass_StyleHistory();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_StyleHistory StyleHistoryParams { get { return s_params_StyleHistory; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_StyleHistory
        {
            public readonly string styleString = "styleString";
        }
        static readonly ActionParamsClass_GetStyleHistory s_params_GetStyleHistory = new ActionParamsClass_GetStyleHistory();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetStyleHistory GetStyleHistoryParams { get { return s_params_GetStyleHistory; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetStyleHistory
        {
            public readonly string styleString = "styleString";
        }
        static readonly ActionParamsClass_GetStylePopoverInfo s_params_GetStylePopoverInfo = new ActionParamsClass_GetStylePopoverInfo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetStylePopoverInfo GetStylePopoverInfoParams { get { return s_params_GetStylePopoverInfo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetStylePopoverInfo
        {
            public readonly string styleId = "styleId";
            public readonly string listingId = "listingId";
        }
        static readonly ActionParamsClass_DeleteStyle s_params_DeleteStyle = new ActionParamsClass_DeleteStyle();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteStyle DeleteStyleParams { get { return s_params_DeleteStyle; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteStyle
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_CreateStyle s_params_CreateStyle = new ActionParamsClass_CreateStyle();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateStyle CreateStyleParams { get { return s_params_CreateStyle; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateStyle
        {
            public readonly string itemType = "itemType";
        }
        static readonly ActionParamsClass_GetAllUpdates s_params_GetAllUpdates = new ActionParamsClass_GetAllUpdates();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAllUpdates GetAllUpdatesParams { get { return s_params_GetAllUpdates; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAllUpdates
        {
            public readonly string fromDate = "fromDate";
        }
        static readonly ActionParamsClass_GetIdListByFilters s_params_GetIdListByFilters = new ActionParamsClass_GetIdListByFilters();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetIdListByFilters GetIdListByFiltersParams { get { return s_params_GetIdListByFilters; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetIdListByFilters
        {
            public readonly string barcode = "barcode";
            public readonly string gender = "gender";
            public readonly string itemStyles = "itemStyles[]";
            public readonly string sleeves = "sleeves[]";
            public readonly string mainLicense = "mainLicense";
            public readonly string subLicense = "subLicense";
            public readonly string holiday = "holiday";
            public readonly string hasInitialQty = "hasInitialQty";
        }
        static readonly ActionParamsClass_GetAll s_params_GetAll = new ActionParamsClass_GetAll();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAll GetAllParams { get { return s_params_GetAll; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAll
        {
            public readonly string request = "request";
            public readonly string styleString = "styleString";
            public readonly string keywords = "keywords";
            public readonly string dropShipperId = "dropShipperId";
            public readonly string onlyInStock = "onlyInStock";
            public readonly string barcode = "barcode";
            public readonly string gender = "gender";
            public readonly string itemStyles = "itemStyles[]";
            public readonly string sleeves = "sleeves[]";
            public readonly string holidayId = "holidayId";
            public readonly string mainLicense = "mainLicense";
            public readonly string subLicense = "subLicense";
            public readonly string hasInitialQty = "hasInitialQty";
            public readonly string pictureStatus = "pictureStatus";
            public readonly string fillingStatus = "fillingStatus";
            public readonly string noneSoldPeriod = "noneSoldPeriod";
            public readonly string onlineStatus = "onlineStatus";
            public readonly string includeKiosk = "includeKiosk";
            public readonly string onlyOnHold = "onlyOnHold";
            public readonly string minQty = "minQty";
            public readonly string excludeMarketplaceId = "excludeMarketplaceId";
            public readonly string includeMarketplaceId = "includeMarketplaceId";
        }
        static readonly ActionParamsClass_Submit s_params_Submit = new ActionParamsClass_Submit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Submit SubmitParams { get { return s_params_Submit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Submit
        {
            public readonly string model = "model";
            public readonly string generateForMarket = "generateForMarket";
        }
        static readonly ActionParamsClass_ChangeStyleItem s_params_ChangeStyleItem = new ActionParamsClass_ChangeStyleItem();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChangeStyleItem ChangeStyleItemParams { get { return s_params_ChangeStyleItem; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChangeStyleItem
        {
            public readonly string styleItemId = "styleItemId";
            public readonly string inputSizeId = "inputSizeId";
        }
        static readonly ActionParamsClass_RemoveStyleItems s_params_RemoveStyleItems = new ActionParamsClass_RemoveStyleItems();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RemoveStyleItems RemoveStyleItemsParams { get { return s_params_RemoveStyleItems; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RemoveStyleItems
        {
            public readonly string styleItemIdList = "styleItemIdList";
        }
        static readonly ActionParamsClass_MergeStyleItems s_params_MergeStyleItems = new ActionParamsClass_MergeStyleItems();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MergeStyleItems MergeStyleItemsParams { get { return s_params_MergeStyleItems; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MergeStyleItems
        {
            public readonly string toStyleItemId = "toStyleItemId";
            public readonly string fromStyleItemId = "fromStyleItemId";
        }
        static readonly ActionParamsClass_CheckStyleId s_params_CheckStyleId = new ActionParamsClass_CheckStyleId();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CheckStyleId CheckStyleIdParams { get { return s_params_CheckStyleId; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CheckStyleId
        {
            public readonly string id = "id";
            public readonly string styleId = "styleId";
        }
        static readonly ActionParamsClass_CheckStyleItem s_params_CheckStyleItem = new ActionParamsClass_CheckStyleItem();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CheckStyleItem CheckStyleItemParams { get { return s_params_CheckStyleItem; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CheckStyleItem
        {
            public readonly string styleItemId = "styleItemId";
        }
        static readonly ActionParamsClass_GetSizesInfo s_params_GetSizesInfo = new ActionParamsClass_GetSizesInfo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetSizesInfo GetSizesInfoParams { get { return s_params_GetSizesInfo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetSizesInfo
        {
            public readonly string sizeIdList = "sizeIdList";
        }
        static readonly ActionParamsClass_GetGeneratedFile s_params_GetGeneratedFile = new ActionParamsClass_GetGeneratedFile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetGeneratedFile GetGeneratedFileParams { get { return s_params_GetGeneratedFile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetGeneratedFile
        {
            public readonly string fileName = "fileName";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _GeneratePopupInfo = "_GeneratePopupInfo";
                public readonly string StyleHistory = "StyleHistory";
                public readonly string StylePopupContent = "StylePopupContent";
                public readonly string Styles = "Styles";
            }
            public readonly string _GeneratePopupInfo = "~/Views/Inventory/_GeneratePopupInfo.cshtml";
            public readonly string StyleHistory = "~/Views/Inventory/StyleHistory.cshtml";
            public readonly string StylePopupContent = "~/Views/Inventory/StylePopupContent.cshtml";
            public readonly string Styles = "~/Views/Inventory/Styles.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_InventoryController : Amazon.Web.Controllers.InventoryController
    {
        public T4MVC_InventoryController() : base(Dummy.Instance) { }

        [NonAction]
        partial void StylesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string styleId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Styles(string styleId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Styles);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleId", styleId);
            StylesOverride(callInfo, styleId);
            return callInfo;
        }

        [NonAction]
        partial void UpdateStyleOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id, int? itemType);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateStyle(long id, int? itemType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateStyle);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "itemType", itemType);
            UpdateStyleOverride(callInfo, id, itemType);
            return callInfo;
        }

        [NonAction]
        partial void SetOnHoldOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool onHold);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetOnHold(int id, bool onHold)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetOnHold);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "onHold", onHold);
            SetOnHoldOverride(callInfo, id, onHold);
            return callInfo;
        }

        [NonAction]
        partial void StyleHistoryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string styleString);

        [NonAction]
        public override System.Web.Mvc.ActionResult StyleHistory(string styleString)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.StyleHistory);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleString", styleString);
            StyleHistoryOverride(callInfo, styleString);
            return callInfo;
        }

        [NonAction]
        partial void GetStyleHistoryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string styleString);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetStyleHistory(string styleString)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetStyleHistory);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleString", styleString);
            GetStyleHistoryOverride(callInfo, styleString);
            return callInfo;
        }

        [NonAction]
        partial void GetStylePopoverInfoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string styleId, long? listingId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetStylePopoverInfo(string styleId, long? listingId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetStylePopoverInfo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleId", styleId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "listingId", listingId);
            GetStylePopoverInfoOverride(callInfo, styleId, listingId);
            return callInfo;
        }

        [NonAction]
        partial void DeleteStyleOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteStyle(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteStyle);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteStyleOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void CreateStyleOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int itemType);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateStyle(int itemType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateStyle);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "itemType", itemType);
            CreateStyleOverride(callInfo, itemType);
            return callInfo;
        }

        [NonAction]
        partial void GetAllUpdatesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.DateTime? fromDate);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetAllUpdates(System.DateTime? fromDate)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAllUpdates);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fromDate", fromDate);
            GetAllUpdatesOverride(callInfo, fromDate);
            return callInfo;
        }

        [NonAction]
        partial void GetIdListByFiltersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string barcode, int? gender, System.Collections.Generic.List<int> itemStyles, System.Collections.Generic.List<int> sleeves, int? mainLicense, int? subLicense, int? holiday, bool hasInitialQty);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetIdListByFilters(string barcode, int? gender, System.Collections.Generic.List<int> itemStyles, System.Collections.Generic.List<int> sleeves, int? mainLicense, int? subLicense, int? holiday, bool hasInitialQty)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetIdListByFilters);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "barcode", barcode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "gender", gender);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "itemStyles[]", itemStyles);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sleeves[]", sleeves);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "mainLicense", mainLicense);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "subLicense", subLicense);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "holiday", holiday);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "hasInitialQty", hasInitialQty);
            GetIdListByFiltersOverride(callInfo, barcode, gender, itemStyles, sleeves, mainLicense, subLicense, holiday, hasInitialQty);
            return callInfo;
        }

        [NonAction]
        partial void GetAllOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Amazon.Web.ViewModels.Grid.GridRequest request, string styleString, string keywords, long? dropShipperId, bool onlyInStock, string barcode, string gender, System.Collections.Generic.List<int> itemStyles, System.Collections.Generic.List<int> sleeves, int? holidayId, int? mainLicense, int? subLicense, bool hasInitialQty, int? pictureStatus, int? fillingStatus, int? noneSoldPeriod, string onlineStatus, bool includeKiosk, bool onlyOnHold, int? minQty, string excludeMarketplaceId, string includeMarketplaceId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetAll(Amazon.Web.ViewModels.Grid.GridRequest request, string styleString, string keywords, long? dropShipperId, bool onlyInStock, string barcode, string gender, System.Collections.Generic.List<int> itemStyles, System.Collections.Generic.List<int> sleeves, int? holidayId, int? mainLicense, int? subLicense, bool hasInitialQty, int? pictureStatus, int? fillingStatus, int? noneSoldPeriod, string onlineStatus, bool includeKiosk, bool onlyOnHold, int? minQty, string excludeMarketplaceId, string includeMarketplaceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAll);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleString", styleString);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "keywords", keywords);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dropShipperId", dropShipperId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "onlyInStock", onlyInStock);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "barcode", barcode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "gender", gender);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "itemStyles[]", itemStyles);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sleeves[]", sleeves);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "holidayId", holidayId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "mainLicense", mainLicense);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "subLicense", subLicense);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "hasInitialQty", hasInitialQty);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pictureStatus", pictureStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fillingStatus", fillingStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "noneSoldPeriod", noneSoldPeriod);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "onlineStatus", onlineStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "includeKiosk", includeKiosk);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "onlyOnHold", onlyOnHold);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "minQty", minQty);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "excludeMarketplaceId", excludeMarketplaceId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "includeMarketplaceId", includeMarketplaceId);
            GetAllOverride(callInfo, request, styleString, keywords, dropShipperId, onlyInStock, barcode, gender, itemStyles, sleeves, holidayId, mainLicense, subLicense, hasInitialQty, pictureStatus, fillingStatus, noneSoldPeriod, onlineStatus, includeKiosk, onlyOnHold, minQty, excludeMarketplaceId, includeMarketplaceId);
            return callInfo;
        }

        [NonAction]
        partial void SubmitOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Amazon.Web.ViewModels.Inventory.StyleViewModel model, int? generateForMarket);

        [NonAction]
        public override System.Web.Mvc.ActionResult Submit(Amazon.Web.ViewModels.Inventory.StyleViewModel model, int? generateForMarket)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Submit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "generateForMarket", generateForMarket);
            SubmitOverride(callInfo, model, generateForMarket);
            return callInfo;
        }

        [NonAction]
        partial void ChangeStyleItemOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long styleItemId, int inputSizeId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangeStyleItem(long styleItemId, int inputSizeId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeStyleItem);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleItemId", styleItemId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "inputSizeId", inputSizeId);
            ChangeStyleItemOverride(callInfo, styleItemId, inputSizeId);
            return callInfo;
        }

        [NonAction]
        partial void RemoveStyleItemsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Collections.Generic.List<long> styleItemIdList);

        [NonAction]
        public override System.Web.Mvc.ActionResult RemoveStyleItems(System.Collections.Generic.List<long> styleItemIdList)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RemoveStyleItems);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleItemIdList", styleItemIdList);
            RemoveStyleItemsOverride(callInfo, styleItemIdList);
            return callInfo;
        }

        [NonAction]
        partial void MergeStyleItemsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long toStyleItemId, long fromStyleItemId);

        [NonAction]
        public override System.Web.Mvc.ActionResult MergeStyleItems(long toStyleItemId, long fromStyleItemId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MergeStyleItems);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "toStyleItemId", toStyleItemId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fromStyleItemId", fromStyleItemId);
            MergeStyleItemsOverride(callInfo, toStyleItemId, fromStyleItemId);
            return callInfo;
        }

        [NonAction]
        partial void CheckStyleIdOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long? id, string styleId);

        [NonAction]
        public override System.Web.Mvc.ActionResult CheckStyleId(long? id, string styleId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CheckStyleId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleId", styleId);
            CheckStyleIdOverride(callInfo, id, styleId);
            return callInfo;
        }

        [NonAction]
        partial void CheckStyleItemOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long styleItemId);

        [NonAction]
        public override System.Web.Mvc.ActionResult CheckStyleItem(long styleItemId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CheckStyleItem);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleItemId", styleItemId);
            CheckStyleItemOverride(callInfo, styleItemId);
            return callInfo;
        }

        [NonAction]
        partial void GetSizesInfoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long[] sizeIdList);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetSizesInfo(long[] sizeIdList)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetSizesInfo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sizeIdList", sizeIdList);
            GetSizesInfoOverride(callInfo, sizeIdList);
            return callInfo;
        }

        [NonAction]
        partial void GetGeneratedFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string fileName);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetGeneratedFile(string fileName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetGeneratedFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileName", fileName);
            GetGeneratedFileOverride(callInfo, fileName);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
