// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Amazon.Web.Controllers
{
    public partial class ItemController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ItemController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ItemController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Products()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Products);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetAllParents()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAllParents);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OnUpdateParent()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OnUpdateParent);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Submit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Submit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetFeatureValues()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetFeatureValues);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RequestUpdate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RequestUpdate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PauseUpdate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PauseUpdate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CheckForUpdate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CheckForUpdate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetRank()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetRank);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetBarcode()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetBarcode);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ExportReturnExemptions()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportReturnExemptions);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ExportToExcelUS()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportToExcelUS);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ExportToExcelCA()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportToExcelCA);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ExportToExcelUK()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportToExcelUK);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetItemErrors()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetItemErrors);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetItemFeedInfo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetItemFeedInfo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SalesPopupByASIN()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SalesPopupByASIN);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SalesPopupByStyleItem()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SalesPopupByStyleItem);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SalesPopupByStyleId()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SalesPopupByStyleId);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetSalesByASIN()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetSalesByASIN);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetSalesByStyleItem()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetSalesByStyleItem);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ItemController Actions { get { return MVC.Item; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Item";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Item";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Products = "Products";
            public readonly string GetAllParents = "GetAllParents";
            public readonly string OnUpdateParent = "OnUpdateParent";
            public readonly string Submit = "Submit";
            public readonly string GetFeatureValues = "GetFeatureValues";
            public readonly string GetItemTypeList = "GetItemTypeList";
            public readonly string RequestUpdate = "RequestUpdate";
            public readonly string PauseUpdate = "PauseUpdate";
            public readonly string CheckForUpdate = "CheckForUpdate";
            public readonly string CheckRank = "CheckRank";
            public readonly string GetRank = "GetRank";
            public readonly string CheckBarcode = "CheckBarcode";
            public readonly string GetBarcode = "GetBarcode";
            public readonly string ExportReturnExemptions = "ExportReturnExemptions";
            public readonly string ExportToExcelUS = "ExportToExcelUS";
            public readonly string ExportToExcelCA = "ExportToExcelCA";
            public readonly string ExportToExcelUK = "ExportToExcelUK";
            public readonly string GetItemErrors = "GetItemErrors";
            public readonly string GetItemFeedInfo = "GetItemFeedInfo";
            public readonly string SalesPopupByASIN = "SalesPopupByASIN";
            public readonly string SalesPopupByStyleItem = "SalesPopupByStyleItem";
            public readonly string SalesPopupByStyleId = "SalesPopupByStyleId";
            public readonly string GetSalesByASIN = "GetSalesByASIN";
            public readonly string GetSalesByStyleItem = "GetSalesByStyleItem";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Products = "Products";
            public const string GetAllParents = "GetAllParents";
            public const string OnUpdateParent = "OnUpdateParent";
            public const string Submit = "Submit";
            public const string GetFeatureValues = "GetFeatureValues";
            public const string GetItemTypeList = "GetItemTypeList";
            public const string RequestUpdate = "RequestUpdate";
            public const string PauseUpdate = "PauseUpdate";
            public const string CheckForUpdate = "CheckForUpdate";
            public const string CheckRank = "CheckRank";
            public const string GetRank = "GetRank";
            public const string CheckBarcode = "CheckBarcode";
            public const string GetBarcode = "GetBarcode";
            public const string ExportReturnExemptions = "ExportReturnExemptions";
            public const string ExportToExcelUS = "ExportToExcelUS";
            public const string ExportToExcelCA = "ExportToExcelCA";
            public const string ExportToExcelUK = "ExportToExcelUK";
            public const string GetItemErrors = "GetItemErrors";
            public const string GetItemFeedInfo = "GetItemFeedInfo";
            public const string SalesPopupByASIN = "SalesPopupByASIN";
            public const string SalesPopupByStyleItem = "SalesPopupByStyleItem";
            public const string SalesPopupByStyleId = "SalesPopupByStyleId";
            public const string GetSalesByASIN = "GetSalesByASIN";
            public const string GetSalesByStyleItem = "GetSalesByStyleItem";
        }


        static readonly ActionParamsClass_Products s_params_Products = new ActionParamsClass_Products();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Products ProductsParams { get { return s_params_Products; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Products
        {
            public readonly string parentAsin = "parentAsin";
            public readonly string market = "market";
            public readonly string marketplaceId = "marketplaceId";
            public readonly string listingMode = "listingMode";
            public readonly string styleId = "styleId";
            public readonly string showIssues = "showIssues";
        }
        static readonly ActionParamsClass_GetAllParents s_params_GetAllParents = new ActionParamsClass_GetAllParents();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAllParents GetAllParentsParams { get { return s_params_GetAllParents; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAllParents
        {
            public readonly string request = "request";
            public readonly string keywords = "keywords";
            public readonly string styleName = "styleName";
            public readonly string gender = "gender";
            public readonly string brand = "brand";
            public readonly string styleId = "styleId";
            public readonly string dropShipperId = "dropShipperId";
            public readonly string priceFrom = "priceFrom";
            public readonly string priceTo = "priceTo";
            public readonly string publishedStatus = "publishedStatus";
            public readonly string availability = "availability";
            public readonly string listingsMode = "listingsMode";
            public readonly string market = "market";
            public readonly string marketplaceId = "marketplaceId";
        }
        static readonly ActionParamsClass_OnUpdateParent s_params_OnUpdateParent = new ActionParamsClass_OnUpdateParent();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_OnUpdateParent OnUpdateParentParams { get { return s_params_OnUpdateParent; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_OnUpdateParent
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_Submit s_params_Submit = new ActionParamsClass_Submit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Submit SubmitParams { get { return s_params_Submit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Submit
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_GetFeatureValues s_params_GetFeatureValues = new ActionParamsClass_GetFeatureValues();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetFeatureValues GetFeatureValuesParams { get { return s_params_GetFeatureValues; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetFeatureValues
        {
            public readonly string featureId = "featureId";
            public readonly string mainFeatureId = "mainFeatureId";
        }
        static readonly ActionParamsClass_RequestUpdate s_params_RequestUpdate = new ActionParamsClass_RequestUpdate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RequestUpdate RequestUpdateParams { get { return s_params_RequestUpdate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RequestUpdate
        {
            public readonly string market = "market";
            public readonly string marketplaceId = "marketplaceId";
        }
        static readonly ActionParamsClass_PauseUpdate s_params_PauseUpdate = new ActionParamsClass_PauseUpdate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PauseUpdate PauseUpdateParams { get { return s_params_PauseUpdate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PauseUpdate
        {
            public readonly string market = "market";
            public readonly string marketplaceId = "marketplaceId";
        }
        static readonly ActionParamsClass_CheckForUpdate s_params_CheckForUpdate = new ActionParamsClass_CheckForUpdate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CheckForUpdate CheckForUpdateParams { get { return s_params_CheckForUpdate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CheckForUpdate
        {
            public readonly string market = "market";
            public readonly string marketplaceId = "marketplaceId";
        }
        static readonly ActionParamsClass_GetRank s_params_GetRank = new ActionParamsClass_GetRank();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetRank GetRankParams { get { return s_params_GetRank; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetRank
        {
            public readonly string asin = "asin";
        }
        static readonly ActionParamsClass_GetBarcode s_params_GetBarcode = new ActionParamsClass_GetBarcode();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetBarcode GetBarcodeParams { get { return s_params_GetBarcode; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetBarcode
        {
            public readonly string barcode = "barcode";
        }
        static readonly ActionParamsClass_ExportReturnExemptions s_params_ExportReturnExemptions = new ActionParamsClass_ExportReturnExemptions();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExportReturnExemptions ExportReturnExemptionsParams { get { return s_params_ExportReturnExemptions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExportReturnExemptions
        {
            public readonly string marketplaceId = "marketplaceId";
        }
        static readonly ActionParamsClass_ExportToExcelUS s_params_ExportToExcelUS = new ActionParamsClass_ExportToExcelUS();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExportToExcelUS ExportToExcelUSParams { get { return s_params_ExportToExcelUS; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExportToExcelUS
        {
            public readonly string asin = "asin";
            public readonly string market = "market";
            public readonly string marketplaceId = "marketplaceId";
            public readonly string useStyleImage = "useStyleImage";
        }
        static readonly ActionParamsClass_ExportToExcelCA s_params_ExportToExcelCA = new ActionParamsClass_ExportToExcelCA();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExportToExcelCA ExportToExcelCAParams { get { return s_params_ExportToExcelCA; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExportToExcelCA
        {
            public readonly string asin = "asin";
            public readonly string market = "market";
            public readonly string marketplaceId = "marketplaceId";
            public readonly string useStyleImage = "useStyleImage";
        }
        static readonly ActionParamsClass_ExportToExcelUK s_params_ExportToExcelUK = new ActionParamsClass_ExportToExcelUK();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExportToExcelUK ExportToExcelUKParams { get { return s_params_ExportToExcelUK; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExportToExcelUK
        {
            public readonly string asin = "asin";
            public readonly string market = "market";
            public readonly string marketplaceId = "marketplaceId";
            public readonly string useStyleImage = "useStyleImage";
        }
        static readonly ActionParamsClass_GetItemErrors s_params_GetItemErrors = new ActionParamsClass_GetItemErrors();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetItemErrors GetItemErrorsParams { get { return s_params_GetItemErrors; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetItemErrors
        {
            public readonly string itemId = "itemId";
        }
        static readonly ActionParamsClass_GetItemFeedInfo s_params_GetItemFeedInfo = new ActionParamsClass_GetItemFeedInfo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetItemFeedInfo GetItemFeedInfoParams { get { return s_params_GetItemFeedInfo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetItemFeedInfo
        {
            public readonly string itemId = "itemId";
        }
        static readonly ActionParamsClass_SalesPopupByASIN s_params_SalesPopupByASIN = new ActionParamsClass_SalesPopupByASIN();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SalesPopupByASIN SalesPopupByASINParams { get { return s_params_SalesPopupByASIN; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SalesPopupByASIN
        {
            public readonly string market = "market";
            public readonly string marketplaceId = "marketplaceId";
            public readonly string asin = "asin";
        }
        static readonly ActionParamsClass_SalesPopupByStyleItem s_params_SalesPopupByStyleItem = new ActionParamsClass_SalesPopupByStyleItem();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SalesPopupByStyleItem SalesPopupByStyleItemParams { get { return s_params_SalesPopupByStyleItem; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SalesPopupByStyleItem
        {
            public readonly string styleItemId = "styleItemId";
        }
        static readonly ActionParamsClass_SalesPopupByStyleId s_params_SalesPopupByStyleId = new ActionParamsClass_SalesPopupByStyleId();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SalesPopupByStyleId SalesPopupByStyleIdParams { get { return s_params_SalesPopupByStyleId; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SalesPopupByStyleId
        {
            public readonly string styleId = "styleId";
        }
        static readonly ActionParamsClass_GetSalesByASIN s_params_GetSalesByASIN = new ActionParamsClass_GetSalesByASIN();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetSalesByASIN GetSalesByASINParams { get { return s_params_GetSalesByASIN; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetSalesByASIN
        {
            public readonly string market = "market";
            public readonly string marketplaceId = "marketplaceId";
            public readonly string asin = "asin";
            public readonly string skuList = "skuList";
            public readonly string period = "period";
        }
        static readonly ActionParamsClass_GetSalesByStyleItem s_params_GetSalesByStyleItem = new ActionParamsClass_GetSalesByStyleItem();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetSalesByStyleItem GetSalesByStyleItemParams { get { return s_params_GetSalesByStyleItem; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetSalesByStyleItem
        {
            public readonly string styleItemIdList = "styleItemIdList";
            public readonly string period = "period";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string ActualizeGrouponQtyPopupContent = "ActualizeGrouponQtyPopupContent";
                public readonly string CheckBarcode = "CheckBarcode";
                public readonly string CheckRank = "CheckRank";
                public readonly string ImportCatalogFeedPopupContent = "ImportCatalogFeedPopupContent";
                public readonly string ParentItemViewModel = "ParentItemViewModel";
                public readonly string Products = "Products";
                public readonly string SalesPopupContent = "SalesPopupContent";
            }
            public readonly string ActualizeGrouponQtyPopupContent = "~/Views/Item/ActualizeGrouponQtyPopupContent.cshtml";
            public readonly string CheckBarcode = "~/Views/Item/CheckBarcode.cshtml";
            public readonly string CheckRank = "~/Views/Item/CheckRank.cshtml";
            public readonly string ImportCatalogFeedPopupContent = "~/Views/Item/ImportCatalogFeedPopupContent.cshtml";
            public readonly string ParentItemViewModel = "~/Views/Item/ParentItemViewModel.cshtml";
            public readonly string Products = "~/Views/Item/Products.cshtml";
            public readonly string SalesPopupContent = "~/Views/Item/SalesPopupContent.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ItemController : Amazon.Web.Controllers.ItemController
    {
        public T4MVC_ItemController() : base(Dummy.Instance) { }

        [NonAction]
        partial void ProductsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string parentAsin, Amazon.Core.Models.MarketType? market, string marketplaceId, Amazon.Core.Entities.Enums.ListingsModeType? listingMode, string styleId, bool? showIssues);

        [NonAction]
        public override System.Web.Mvc.ActionResult Products(string parentAsin, Amazon.Core.Models.MarketType? market, string marketplaceId, Amazon.Core.Entities.Enums.ListingsModeType? listingMode, string styleId, bool? showIssues)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Products);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "parentAsin", parentAsin);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "market", market);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "marketplaceId", marketplaceId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "listingMode", listingMode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleId", styleId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "showIssues", showIssues);
            ProductsOverride(callInfo, parentAsin, market, marketplaceId, listingMode, styleId, showIssues);
            return callInfo;
        }

        [NonAction]
        partial void GetAllParentsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Amazon.Web.ViewModels.Grid.GridRequest request, string keywords, string styleName, string gender, string brand, long? styleId, long? dropShipperId, decimal? priceFrom, decimal? priceTo, int? publishedStatus, int? availability, int? listingsMode, int? market, string marketplaceId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetAllParents(Amazon.Web.ViewModels.Grid.GridRequest request, string keywords, string styleName, string gender, string brand, long? styleId, long? dropShipperId, decimal? priceFrom, decimal? priceTo, int? publishedStatus, int? availability, int? listingsMode, int? market, string marketplaceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAllParents);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "keywords", keywords);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleName", styleName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "gender", gender);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "brand", brand);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleId", styleId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dropShipperId", dropShipperId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "priceFrom", priceFrom);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "priceTo", priceTo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "publishedStatus", publishedStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "availability", availability);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "listingsMode", listingsMode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "market", market);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "marketplaceId", marketplaceId);
            GetAllParentsOverride(callInfo, request, keywords, styleName, gender, brand, styleId, dropShipperId, priceFrom, priceTo, publishedStatus, availability, listingsMode, market, marketplaceId);
            return callInfo;
        }

        [NonAction]
        partial void OnUpdateParentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult OnUpdateParent(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OnUpdateParent);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            OnUpdateParentOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void SubmitOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Amazon.Web.ViewModels.Products.EditParentItemsViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult Submit(Amazon.Web.ViewModels.Products.EditParentItemsViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Submit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            SubmitOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void GetFeatureValuesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int featureId, int? mainFeatureId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetFeatureValues(int featureId, int? mainFeatureId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetFeatureValues);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "featureId", featureId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "mainFeatureId", mainFeatureId);
            GetFeatureValuesOverride(callInfo, featureId, mainFeatureId);
            return callInfo;
        }

        [NonAction]
        partial void GetItemTypeListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetItemTypeList()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetItemTypeList);
            GetItemTypeListOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RequestUpdateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Amazon.Core.Models.MarketType? market, string marketplaceId);

        [NonAction]
        public override System.Web.Mvc.ActionResult RequestUpdate(Amazon.Core.Models.MarketType? market, string marketplaceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RequestUpdate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "market", market);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "marketplaceId", marketplaceId);
            RequestUpdateOverride(callInfo, market, marketplaceId);
            return callInfo;
        }

        [NonAction]
        partial void PauseUpdateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Amazon.Core.Models.MarketType? market, string marketplaceId);

        [NonAction]
        public override System.Web.Mvc.ActionResult PauseUpdate(Amazon.Core.Models.MarketType? market, string marketplaceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PauseUpdate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "market", market);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "marketplaceId", marketplaceId);
            PauseUpdateOverride(callInfo, market, marketplaceId);
            return callInfo;
        }

        [NonAction]
        partial void CheckForUpdateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Amazon.Core.Models.MarketType? market, string marketplaceId);

        [NonAction]
        public override System.Web.Mvc.ActionResult CheckForUpdate(Amazon.Core.Models.MarketType? market, string marketplaceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CheckForUpdate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "market", market);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "marketplaceId", marketplaceId);
            CheckForUpdateOverride(callInfo, market, marketplaceId);
            return callInfo;
        }

        [NonAction]
        partial void CheckRankOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CheckRank()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CheckRank);
            CheckRankOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetRankOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string asin);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetRank(string asin)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetRank);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "asin", asin);
            GetRankOverride(callInfo, asin);
            return callInfo;
        }

        [NonAction]
        partial void CheckBarcodeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CheckBarcode()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CheckBarcode);
            CheckBarcodeOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetBarcodeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string barcode);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetBarcode(string barcode)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetBarcode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "barcode", barcode);
            GetBarcodeOverride(callInfo, barcode);
            return callInfo;
        }

        [NonAction]
        partial void ExportReturnExemptionsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string marketplaceId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExportReturnExemptions(string marketplaceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportReturnExemptions);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "marketplaceId", marketplaceId);
            ExportReturnExemptionsOverride(callInfo, marketplaceId);
            return callInfo;
        }

        [NonAction]
        partial void ExportToExcelUSOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string asin, Amazon.Core.Models.MarketType market, string marketplaceId, bool useStyleImage);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExportToExcelUS(string asin, Amazon.Core.Models.MarketType market, string marketplaceId, bool useStyleImage)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportToExcelUS);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "asin", asin);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "market", market);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "marketplaceId", marketplaceId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "useStyleImage", useStyleImage);
            ExportToExcelUSOverride(callInfo, asin, market, marketplaceId, useStyleImage);
            return callInfo;
        }

        [NonAction]
        partial void ExportToExcelCAOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string asin, Amazon.Core.Models.MarketType market, string marketplaceId, bool useStyleImage);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExportToExcelCA(string asin, Amazon.Core.Models.MarketType market, string marketplaceId, bool useStyleImage)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportToExcelCA);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "asin", asin);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "market", market);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "marketplaceId", marketplaceId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "useStyleImage", useStyleImage);
            ExportToExcelCAOverride(callInfo, asin, market, marketplaceId, useStyleImage);
            return callInfo;
        }

        [NonAction]
        partial void ExportToExcelUKOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string asin, Amazon.Core.Models.MarketType market, string marketplaceId, bool useStyleImage);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExportToExcelUK(string asin, Amazon.Core.Models.MarketType market, string marketplaceId, bool useStyleImage)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportToExcelUK);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "asin", asin);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "market", market);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "marketplaceId", marketplaceId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "useStyleImage", useStyleImage);
            ExportToExcelUKOverride(callInfo, asin, market, marketplaceId, useStyleImage);
            return callInfo;
        }

        [NonAction]
        partial void GetItemErrorsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long itemId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetItemErrors(long itemId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetItemErrors);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "itemId", itemId);
            GetItemErrorsOverride(callInfo, itemId);
            return callInfo;
        }

        [NonAction]
        partial void GetItemFeedInfoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long itemId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetItemFeedInfo(long itemId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetItemFeedInfo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "itemId", itemId);
            GetItemFeedInfoOverride(callInfo, itemId);
            return callInfo;
        }

        [NonAction]
        partial void SalesPopupByASINOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Amazon.Core.Models.MarketType market, string marketplaceId, string asin);

        [NonAction]
        public override System.Web.Mvc.ActionResult SalesPopupByASIN(Amazon.Core.Models.MarketType market, string marketplaceId, string asin)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SalesPopupByASIN);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "market", market);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "marketplaceId", marketplaceId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "asin", asin);
            SalesPopupByASINOverride(callInfo, market, marketplaceId, asin);
            return callInfo;
        }

        [NonAction]
        partial void SalesPopupByStyleItemOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long styleItemId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SalesPopupByStyleItem(long styleItemId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SalesPopupByStyleItem);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleItemId", styleItemId);
            SalesPopupByStyleItemOverride(callInfo, styleItemId);
            return callInfo;
        }

        [NonAction]
        partial void SalesPopupByStyleIdOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long styleId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SalesPopupByStyleId(long styleId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SalesPopupByStyleId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleId", styleId);
            SalesPopupByStyleIdOverride(callInfo, styleId);
            return callInfo;
        }

        [NonAction]
        partial void GetSalesByASINOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Amazon.Core.Models.MarketType market, string marketplaceId, string asin, string[] skuList, int period);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetSalesByASIN(Amazon.Core.Models.MarketType market, string marketplaceId, string asin, string[] skuList, int period)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetSalesByASIN);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "market", market);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "marketplaceId", marketplaceId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "asin", asin);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "skuList", skuList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "period", period);
            GetSalesByASINOverride(callInfo, market, marketplaceId, asin, skuList, period);
            return callInfo;
        }

        [NonAction]
        partial void GetSalesByStyleItemOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long[] styleItemIdList, int period);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetSalesByStyleItem(long[] styleItemIdList, int period)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetSalesByStyleItem);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleItemIdList", styleItemIdList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "period", period);
            GetSalesByStyleItemOverride(callInfo, styleItemIdList, period);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
