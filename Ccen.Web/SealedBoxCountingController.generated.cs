// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Amazon.Web.Controllers
{
    public partial class SealedBoxCountingController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public SealedBoxCountingController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected SealedBoxCountingController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OnCreateItem()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OnCreateItem);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteBox()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteBox);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Submit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Submit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetSealedBox()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetSealedBox);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OnUpdateItem()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OnUpdateItem);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public SealedBoxCountingController Actions { get { return MVC.SealedBoxCounting; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "SealedBoxCounting";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "SealedBoxCounting";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string OnCreateItem = "OnCreateItem";
            public readonly string DeleteBox = "DeleteBox";
            public readonly string Submit = "Submit";
            public readonly string GetSealedBox = "GetSealedBox";
            public readonly string OnUpdateItem = "OnUpdateItem";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string OnCreateItem = "OnCreateItem";
            public const string DeleteBox = "DeleteBox";
            public const string Submit = "Submit";
            public const string GetSealedBox = "GetSealedBox";
            public const string OnUpdateItem = "OnUpdateItem";
        }


        static readonly ActionParamsClass_OnCreateItem s_params_OnCreateItem = new ActionParamsClass_OnCreateItem();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_OnCreateItem OnCreateItemParams { get { return s_params_OnCreateItem; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_OnCreateItem
        {
            public readonly string styleId = "styleId";
            public readonly string isMobileMode = "isMobileMode";
        }
        static readonly ActionParamsClass_DeleteBox s_params_DeleteBox = new ActionParamsClass_DeleteBox();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteBox DeleteBoxParams { get { return s_params_DeleteBox; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteBox
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_Submit s_params_Submit = new ActionParamsClass_Submit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Submit SubmitParams { get { return s_params_Submit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Submit
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_GetSealedBox s_params_GetSealedBox = new ActionParamsClass_GetSealedBox();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetSealedBox GetSealedBoxParams { get { return s_params_GetSealedBox; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetSealedBox
        {
            public readonly string request = "request";
            public readonly string styleId = "styleId";
        }
        static readonly ActionParamsClass_OnUpdateItem s_params_OnUpdateItem = new ActionParamsClass_OnUpdateItem();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_OnUpdateItem OnUpdateItemParams { get { return s_params_OnUpdateItem; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_OnUpdateItem
        {
            public readonly string sealedBoxId = "sealedBoxId";
            public readonly string isMobileMode = "isMobileMode";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string SealedBoxViewModel = "SealedBoxViewModel";
            }
            public readonly string SealedBoxViewModel = "~/Views/SealedBoxCounting/SealedBoxViewModel.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_SealedBoxCountingController : Amazon.Web.Controllers.SealedBoxCountingController
    {
        public T4MVC_SealedBoxCountingController() : base(Dummy.Instance) { }

        [NonAction]
        partial void OnCreateItemOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long styleId, bool? isMobileMode);

        [NonAction]
        public override System.Web.Mvc.ActionResult OnCreateItem(long styleId, bool? isMobileMode)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OnCreateItem);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleId", styleId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isMobileMode", isMobileMode);
            OnCreateItemOverride(callInfo, styleId, isMobileMode);
            return callInfo;
        }

        [NonAction]
        partial void DeleteBoxOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteBox(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteBox);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteBoxOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void SubmitOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Amazon.Web.ViewModels.Inventory.Counting.SealedBoxCountingViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult Submit(Amazon.Web.ViewModels.Inventory.Counting.SealedBoxCountingViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Submit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            SubmitOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void GetSealedBoxOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Kendo.Mvc.UI.DataSourceRequest request, long styleId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetSealedBox(Kendo.Mvc.UI.DataSourceRequest request, long styleId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetSealedBox);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleId", styleId);
            GetSealedBoxOverride(callInfo, request, styleId);
            return callInfo;
        }

        [NonAction]
        partial void OnUpdateItemOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long sealedBoxId, bool? isMobileMode);

        [NonAction]
        public override System.Web.Mvc.ActionResult OnUpdateItem(long sealedBoxId, bool? isMobileMode)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OnUpdateItem);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sealedBoxId", sealedBoxId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isMobileMode", isMobileMode);
            OnUpdateItemOverride(callInfo, sealedBoxId, isMobileMode);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
