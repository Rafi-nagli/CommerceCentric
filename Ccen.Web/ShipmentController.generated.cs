// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Amazon.Web.Controllers
{
    public partial class ShipmentController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ShipmentController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ShipmentController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetAll()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAll);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetArchiveStatus()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetArchiveStatus);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetFinishStatus()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetFinishStatus);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OnEdit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OnEdit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Submit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Submit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ExportToExcel()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportToExcel);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ExportToWFSExcel()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportToWFSExcel);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ExportToPlanExcel()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportToPlanExcel);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ExportToWFSPlanExcel()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportToWFSPlanExcel);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ExportPickListExcel()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportPickListExcel);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetListingByStyleSize()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetListingByStyleSize);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ShipmentController Actions { get { return MVC.Shipment; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Shipment";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Shipment";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string GetAll = "GetAll";
            public readonly string SetArchiveStatus = "SetArchiveStatus";
            public readonly string SetFinishStatus = "SetFinishStatus";
            public readonly string OnEdit = "OnEdit";
            public readonly string Submit = "Submit";
            public readonly string ExportToExcel = "ExportToExcel";
            public readonly string ExportToWFSExcel = "ExportToWFSExcel";
            public readonly string ExportToPlanExcel = "ExportToPlanExcel";
            public readonly string ExportToWFSPlanExcel = "ExportToWFSPlanExcel";
            public readonly string ExportPickListExcel = "ExportPickListExcel";
            public readonly string GetListingByStyleSize = "GetListingByStyleSize";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string GetAll = "GetAll";
            public const string SetArchiveStatus = "SetArchiveStatus";
            public const string SetFinishStatus = "SetFinishStatus";
            public const string OnEdit = "OnEdit";
            public const string Submit = "Submit";
            public const string ExportToExcel = "ExportToExcel";
            public const string ExportToWFSExcel = "ExportToWFSExcel";
            public const string ExportToPlanExcel = "ExportToPlanExcel";
            public const string ExportToWFSPlanExcel = "ExportToWFSPlanExcel";
            public const string ExportPickListExcel = "ExportPickListExcel";
            public const string GetListingByStyleSize = "GetListingByStyleSize";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string shipmenttype = "shipmenttype";
        }
        static readonly ActionParamsClass_GetAll s_params_GetAll = new ActionParamsClass_GetAll();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAll GetAllParams { get { return s_params_GetAll; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAll
        {
            public readonly string request = "request";
            public readonly string showArchived = "showArchived";
            public readonly string shipmenttype = "shipmenttype";
        }
        static readonly ActionParamsClass_SetArchiveStatus s_params_SetArchiveStatus = new ActionParamsClass_SetArchiveStatus();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetArchiveStatus SetArchiveStatusParams { get { return s_params_SetArchiveStatus; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetArchiveStatus
        {
            public readonly string id = "id";
            public readonly string status = "status";
        }
        static readonly ActionParamsClass_SetFinishStatus s_params_SetFinishStatus = new ActionParamsClass_SetFinishStatus();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetFinishStatus SetFinishStatusParams { get { return s_params_SetFinishStatus; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetFinishStatus
        {
            public readonly string id = "id";
            public readonly string isFinished = "isFinished";
        }
        static readonly ActionParamsClass_OnEdit s_params_OnEdit = new ActionParamsClass_OnEdit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_OnEdit OnEditParams { get { return s_params_OnEdit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_OnEdit
        {
            public readonly string id = "id";
            public readonly string shipmenttype = "shipmenttype";
        }
        static readonly ActionParamsClass_Submit s_params_Submit = new ActionParamsClass_Submit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Submit SubmitParams { get { return s_params_Submit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Submit
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_ExportToExcel s_params_ExportToExcel = new ActionParamsClass_ExportToExcel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExportToExcel ExportToExcelParams { get { return s_params_ExportToExcel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExportToExcel
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_ExportToWFSExcel s_params_ExportToWFSExcel = new ActionParamsClass_ExportToWFSExcel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExportToWFSExcel ExportToWFSExcelParams { get { return s_params_ExportToWFSExcel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExportToWFSExcel
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_ExportToPlanExcel s_params_ExportToPlanExcel = new ActionParamsClass_ExportToPlanExcel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExportToPlanExcel ExportToPlanExcelParams { get { return s_params_ExportToPlanExcel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExportToPlanExcel
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_ExportToWFSPlanExcel s_params_ExportToWFSPlanExcel = new ActionParamsClass_ExportToWFSPlanExcel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExportToWFSPlanExcel ExportToWFSPlanExcelParams { get { return s_params_ExportToWFSPlanExcel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExportToWFSPlanExcel
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_ExportPickListExcel s_params_ExportPickListExcel = new ActionParamsClass_ExportPickListExcel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExportPickListExcel ExportPickListExcelParams { get { return s_params_ExportPickListExcel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExportPickListExcel
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_GetListingByStyleSize s_params_GetListingByStyleSize = new ActionParamsClass_GetListingByStyleSize();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetListingByStyleSize GetListingByStyleSizeParams { get { return s_params_GetListingByStyleSize; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetListingByStyleSize
        {
            public readonly string styleItemId = "styleItemId";
            public readonly string selectedListingId = "selectedListingId";
            public readonly string shipmenttype = "shipmenttype";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string EditPickListPopupContent = "EditPickListPopupContent";
                public readonly string Index = "Index";
            }
            public readonly string EditPickListPopupContent = "~/Views/Shipment/EditPickListPopupContent.cshtml";
            public readonly string Index = "~/Views/Shipment/Index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ShipmentController : Amazon.Web.Controllers.ShipmentController
    {
        public T4MVC_ShipmentController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string shipmenttype);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(string shipmenttype)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "shipmenttype", shipmenttype);
            IndexOverride(callInfo, shipmenttype);
            return callInfo;
        }

        [NonAction]
        partial void GetAllOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Kendo.Mvc.UI.DataSourceRequest request, bool showArchived, string shipmenttype);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetAll(Kendo.Mvc.UI.DataSourceRequest request, bool showArchived, string shipmenttype)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAll);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "showArchived", showArchived);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "shipmenttype", shipmenttype);
            GetAllOverride(callInfo, request, showArchived, shipmenttype);
            return callInfo;
        }

        [NonAction]
        partial void SetArchiveStatusOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id, bool status);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetArchiveStatus(long id, bool status)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetArchiveStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "status", status);
            SetArchiveStatusOverride(callInfo, id, status);
            return callInfo;
        }

        [NonAction]
        partial void SetFinishStatusOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id, bool isFinished);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetFinishStatus(long id, bool isFinished)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetFinishStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isFinished", isFinished);
            SetFinishStatusOverride(callInfo, id, isFinished);
            return callInfo;
        }

        [NonAction]
        partial void OnEditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long? id, string shipmenttype);

        [NonAction]
        public override System.Web.Mvc.ActionResult OnEdit(long? id, string shipmenttype)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OnEdit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "shipmenttype", shipmenttype);
            OnEditOverride(callInfo, id, shipmenttype);
            return callInfo;
        }

        [NonAction]
        partial void SubmitOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Amazon.Web.ViewModels.Inventory.FBAPickLists.ShipmentPickListViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult Submit(Amazon.Web.ViewModels.Inventory.FBAPickLists.ShipmentPickListViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Submit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            SubmitOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void ExportToExcelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExportToExcel(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportToExcel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ExportToExcelOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void ExportToWFSExcelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExportToWFSExcel(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportToWFSExcel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ExportToWFSExcelOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void ExportToPlanExcelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExportToPlanExcel(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportToPlanExcel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ExportToPlanExcelOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void ExportToWFSPlanExcelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExportToWFSPlanExcel(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportToWFSPlanExcel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ExportToWFSPlanExcelOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void ExportPickListExcelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ExportPickListExcel(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExportPickListExcel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ExportPickListExcelOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void GetListingByStyleSizeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long styleItemId, long? selectedListingId, Ccen.Core.Models.Enums.ShipmentsTypeEnum shipmenttype);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetListingByStyleSize(long styleItemId, long? selectedListingId, Ccen.Core.Models.Enums.ShipmentsTypeEnum shipmenttype)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetListingByStyleSize);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleItemId", styleItemId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "selectedListingId", selectedListingId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "shipmenttype", shipmenttype);
            GetListingByStyleSizeOverride(callInfo, styleItemId, selectedListingId, shipmenttype);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
