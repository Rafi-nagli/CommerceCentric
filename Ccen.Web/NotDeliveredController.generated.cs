// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Amazon.Web.Controllers
{
    public partial class NotDeliveredController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public NotDeliveredController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected NotDeliveredController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetAll()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAll);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetDismiss()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetDismiss);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetSubmitClaim()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetSubmitClaim);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetHighlight()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetHighlight);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public NotDeliveredController Actions { get { return MVC.NotDelivered; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "NotDelivered";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "NotDelivered";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string GetAll = "GetAll";
            public readonly string SetDismiss = "SetDismiss";
            public readonly string SetSubmitClaim = "SetSubmitClaim";
            public readonly string SetHighlight = "SetHighlight";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string GetAll = "GetAll";
            public const string SetDismiss = "SetDismiss";
            public const string SetSubmitClaim = "SetSubmitClaim";
            public const string SetHighlight = "SetHighlight";
        }


        static readonly ActionParamsClass_GetAll s_params_GetAll = new ActionParamsClass_GetAll();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAll GetAllParams { get { return s_params_GetAll; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAll
        {
            public readonly string request = "request";
            public readonly string dateFrom = "dateFrom";
            public readonly string dateTo = "dateTo";
            public readonly string buyerName = "buyerName";
            public readonly string orderNumber = "orderNumber";
            public readonly string status = "status";
        }
        static readonly ActionParamsClass_SetDismiss s_params_SetDismiss = new ActionParamsClass_SetDismiss();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetDismiss SetDismissParams { get { return s_params_SetDismiss; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetDismiss
        {
            public readonly string shippingId = "shippingId";
            public readonly string shippingType = "shippingType";
        }
        static readonly ActionParamsClass_SetSubmitClaim s_params_SetSubmitClaim = new ActionParamsClass_SetSubmitClaim();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetSubmitClaim SetSubmitClaimParams { get { return s_params_SetSubmitClaim; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetSubmitClaim
        {
            public readonly string shippingId = "shippingId";
            public readonly string shippingType = "shippingType";
        }
        static readonly ActionParamsClass_SetHighlight s_params_SetHighlight = new ActionParamsClass_SetHighlight();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetHighlight SetHighlightParams { get { return s_params_SetHighlight; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetHighlight
        {
            public readonly string shippingId = "shippingId";
            public readonly string shippingType = "shippingType";
            public readonly string isHighlight = "isHighlight";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Index = "Index";
            }
            public readonly string Index = "~/Views/NotDelivered/Index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_NotDeliveredController : Amazon.Web.Controllers.NotDeliveredController
    {
        public T4MVC_NotDeliveredController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetAllOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Kendo.Mvc.UI.DataSourceRequest request, System.DateTime? dateFrom, System.DateTime? dateTo, string buyerName, string orderNumber, string status);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetAll(Kendo.Mvc.UI.DataSourceRequest request, System.DateTime? dateFrom, System.DateTime? dateTo, string buyerName, string orderNumber, string status)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAll);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dateFrom", dateFrom);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dateTo", dateTo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "buyerName", buyerName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderNumber", orderNumber);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "status", status);
            GetAllOverride(callInfo, request, dateFrom, dateTo, buyerName, orderNumber, status);
            return callInfo;
        }

        [NonAction]
        partial void SetDismissOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long shippingId, int shippingType);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetDismiss(long shippingId, int shippingType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetDismiss);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "shippingId", shippingId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "shippingType", shippingType);
            SetDismissOverride(callInfo, shippingId, shippingType);
            return callInfo;
        }

        [NonAction]
        partial void SetSubmitClaimOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long shippingId, int shippingType);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetSubmitClaim(long shippingId, int shippingType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetSubmitClaim);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "shippingId", shippingId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "shippingType", shippingType);
            SetSubmitClaimOverride(callInfo, shippingId, shippingType);
            return callInfo;
        }

        [NonAction]
        partial void SetHighlightOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long shippingId, int shippingType, bool isHighlight);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetHighlight(long shippingId, int shippingType, bool isHighlight)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetHighlight);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "shippingId", shippingId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "shippingType", shippingType);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isHighlight", isHighlight);
            SetHighlightOverride(callInfo, shippingId, shippingType, isHighlight);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
