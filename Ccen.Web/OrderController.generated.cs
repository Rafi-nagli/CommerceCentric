// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Amazon.Web.Controllers
{
    public partial class OrderController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public OrderController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected OrderController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Orders()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Orders);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult FBAOrders()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FBAOrders);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetFBAOrders()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetFBAOrders);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetWFSOrders()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetWFSOrders);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetOrderById()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetOrderById);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetOrders()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetOrders);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetPendingOrders()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPendingOrders);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetOnHold()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetOnHold);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetIsOversold()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetIsOversold);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetRefundLocked()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetRefundLocked);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetShippingOptions()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetShippingOptions);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetFile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetFile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OrderHistory()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OrderHistory);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetOrderHistory()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetOrderHistory);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetOrderQuickSummary()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetOrderQuickSummary);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetOrderMessagesSummary()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetOrderMessagesSummary);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OnEditOrder()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OnEditOrder);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OnViewComments()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OnViewComments);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetDismissAddressValidationError()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetDismissAddressValidationError);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetCustomShipping()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetCustomShipping);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetCustomShipping()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetCustomShipping);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetTrackingNumber()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetTrackingNumber);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AttachOrderTo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AttachOrderTo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CancelOrder()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CancelOrder);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CheckAddress()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CheckAddress);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Submit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Submit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetListingsToReplace()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetListingsToReplace);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetSecondDay()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetSecondDay);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public OrderController Actions { get { return MVC.Order; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Order";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Order";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Stats = "Stats";
            public readonly string Orders = "Orders";
            public readonly string GetSearchHistory = "GetSearchHistory";
            public readonly string FBAOrders = "FBAOrders";
            public readonly string PendingOrders = "PendingOrders";
            public readonly string EBayOrders = "EBayOrders";
            public readonly string MagentoOrders = "MagentoOrders";
            public readonly string WalmartOrders = "WalmartOrders";
            public readonly string WalmartCAOrders = "WalmartCAOrders";
            public readonly string JetOrders = "JetOrders";
            public readonly string SecondDayOrders = "SecondDayOrders";
            public readonly string GetFBAOrders = "GetFBAOrders";
            public readonly string GetWFSOrders = "GetWFSOrders";
            public readonly string GetAllUnshippedInfo = "GetAllUnshippedInfo";
            public readonly string GetOrderById = "GetOrderById";
            public readonly string GetOrders = "GetOrders";
            public readonly string GetPendingOrders = "GetPendingOrders";
            public readonly string SetOnHold = "SetOnHold";
            public readonly string SetIsOversold = "SetIsOversold";
            public readonly string SetRefundLocked = "SetRefundLocked";
            public readonly string SetShippingOptions = "SetShippingOptions";
            public readonly string GetFile = "GetFile";
            public readonly string OrderHistory = "OrderHistory";
            public readonly string GetOrderHistory = "GetOrderHistory";
            public readonly string GetOrderQuickSummary = "GetOrderQuickSummary";
            public readonly string GetOrderMessagesSummary = "GetOrderMessagesSummary";
            public readonly string OnEditOrder = "OnEditOrder";
            public readonly string OnViewComments = "OnViewComments";
            public readonly string SetDismissAddressValidationError = "SetDismissAddressValidationError";
            public readonly string SetCustomShipping = "SetCustomShipping";
            public readonly string GetCustomShipping = "GetCustomShipping";
            public readonly string SetTrackingNumber = "SetTrackingNumber";
            public readonly string AttachOrderTo = "AttachOrderTo";
            public readonly string CancelOrder = "CancelOrder";
            public readonly string CheckAddress = "CheckAddress";
            public readonly string Submit = "Submit";
            public readonly string GetListingsToReplace = "GetListingsToReplace";
            public readonly string GetSecondDay = "GetSecondDay";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Stats = "Stats";
            public const string Orders = "Orders";
            public const string GetSearchHistory = "GetSearchHistory";
            public const string FBAOrders = "FBAOrders";
            public const string PendingOrders = "PendingOrders";
            public const string EBayOrders = "EBayOrders";
            public const string MagentoOrders = "MagentoOrders";
            public const string WalmartOrders = "WalmartOrders";
            public const string WalmartCAOrders = "WalmartCAOrders";
            public const string JetOrders = "JetOrders";
            public const string SecondDayOrders = "SecondDayOrders";
            public const string GetFBAOrders = "GetFBAOrders";
            public const string GetWFSOrders = "GetWFSOrders";
            public const string GetAllUnshippedInfo = "GetAllUnshippedInfo";
            public const string GetOrderById = "GetOrderById";
            public const string GetOrders = "GetOrders";
            public const string GetPendingOrders = "GetPendingOrders";
            public const string SetOnHold = "SetOnHold";
            public const string SetIsOversold = "SetIsOversold";
            public const string SetRefundLocked = "SetRefundLocked";
            public const string SetShippingOptions = "SetShippingOptions";
            public const string GetFile = "GetFile";
            public const string OrderHistory = "OrderHistory";
            public const string GetOrderHistory = "GetOrderHistory";
            public const string GetOrderQuickSummary = "GetOrderQuickSummary";
            public const string GetOrderMessagesSummary = "GetOrderMessagesSummary";
            public const string OnEditOrder = "OnEditOrder";
            public const string OnViewComments = "OnViewComments";
            public const string SetDismissAddressValidationError = "SetDismissAddressValidationError";
            public const string SetCustomShipping = "SetCustomShipping";
            public const string GetCustomShipping = "GetCustomShipping";
            public const string SetTrackingNumber = "SetTrackingNumber";
            public const string AttachOrderTo = "AttachOrderTo";
            public const string CancelOrder = "CancelOrder";
            public const string CheckAddress = "CheckAddress";
            public const string Submit = "Submit";
            public const string GetListingsToReplace = "GetListingsToReplace";
            public const string GetSecondDay = "GetSecondDay";
        }


        static readonly ActionParamsClass_Orders s_params_Orders = new ActionParamsClass_Orders();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Orders OrdersParams { get { return s_params_Orders; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Orders
        {
            public readonly string orderId = "orderId";
        }
        static readonly ActionParamsClass_FBAOrders s_params_FBAOrders = new ActionParamsClass_FBAOrders();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FBAOrders FBAOrdersParams { get { return s_params_FBAOrders; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FBAOrders
        {
            public readonly string market = "market";
        }
        static readonly ActionParamsClass_GetFBAOrders s_params_GetFBAOrders = new ActionParamsClass_GetFBAOrders();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetFBAOrders GetFBAOrdersParams { get { return s_params_GetFBAOrders; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetFBAOrders
        {
            public readonly string request = "request";
            public readonly string dateFrom = "dateFrom";
            public readonly string dateTo = "dateTo";
            public readonly string market = "market";
        }
        static readonly ActionParamsClass_GetWFSOrders s_params_GetWFSOrders = new ActionParamsClass_GetWFSOrders();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetWFSOrders GetWFSOrdersParams { get { return s_params_GetWFSOrders; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetWFSOrders
        {
            public readonly string request = "request";
            public readonly string dateFrom = "dateFrom";
            public readonly string dateTo = "dateTo";
        }
        static readonly ActionParamsClass_GetOrderById s_params_GetOrderById = new ActionParamsClass_GetOrderById();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetOrderById GetOrderByIdParams { get { return s_params_GetOrderById; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetOrderById
        {
            public readonly string orderId = "orderId";
        }
        static readonly ActionParamsClass_GetOrders s_params_GetOrders = new ActionParamsClass_GetOrders();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetOrders GetOrdersParams { get { return s_params_GetOrders; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetOrders
        {
            public readonly string request = "request";
            public readonly string market = "market";
            public readonly string marketplaceId = "marketplaceId";
            public readonly string orderStatus = "orderStatus";
            public readonly string shippingStatus = "shippingStatus";
            public readonly string dateFrom = "dateFrom";
            public readonly string dateTo = "dateTo";
            public readonly string buyerName = "buyerName";
            public readonly string orderNumber = "orderNumber";
            public readonly string batchId = "batchId";
            public readonly string dropShipperId = "dropShipperId";
            public readonly string styleId = "styleId";
            public readonly string styleItemId = "styleItemId";
        }
        static readonly ActionParamsClass_GetPendingOrders s_params_GetPendingOrders = new ActionParamsClass_GetPendingOrders();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetPendingOrders GetPendingOrdersParams { get { return s_params_GetPendingOrders; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetPendingOrders
        {
            public readonly string request = "request";
            public readonly string market = "market";
            public readonly string marketplaceId = "marketplaceId";
        }
        static readonly ActionParamsClass_SetOnHold s_params_SetOnHold = new ActionParamsClass_SetOnHold();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetOnHold SetOnHoldParams { get { return s_params_SetOnHold; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetOnHold
        {
            public readonly string id = "id";
            public readonly string onHold = "onHold";
        }
        static readonly ActionParamsClass_SetIsOversold s_params_SetIsOversold = new ActionParamsClass_SetIsOversold();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetIsOversold SetIsOversoldParams { get { return s_params_SetIsOversold; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetIsOversold
        {
            public readonly string id = "id";
            public readonly string isOversold = "isOversold";
        }
        static readonly ActionParamsClass_SetRefundLocked s_params_SetRefundLocked = new ActionParamsClass_SetRefundLocked();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetRefundLocked SetRefundLockedParams { get { return s_params_SetRefundLocked; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetRefundLocked
        {
            public readonly string id = "id";
            public readonly string isRefundLocked = "isRefundLocked";
        }
        static readonly ActionParamsClass_SetShippingOptions s_params_SetShippingOptions = new ActionParamsClass_SetShippingOptions();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetShippingOptions SetShippingOptionsParams { get { return s_params_SetShippingOptions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetShippingOptions
        {
            public readonly string id = "id";
            public readonly string orderId = "orderId";
            public readonly string groupId = "groupId";
        }
        static readonly ActionParamsClass_GetFile s_params_GetFile = new ActionParamsClass_GetFile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetFile GetFileParams { get { return s_params_GetFile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetFile
        {
            public readonly string fileName = "fileName";
        }
        static readonly ActionParamsClass_OrderHistory s_params_OrderHistory = new ActionParamsClass_OrderHistory();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_OrderHistory OrderHistoryParams { get { return s_params_OrderHistory; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_OrderHistory
        {
            public readonly string orderId = "orderId";
        }
        static readonly ActionParamsClass_GetOrderHistory s_params_GetOrderHistory = new ActionParamsClass_GetOrderHistory();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetOrderHistory GetOrderHistoryParams { get { return s_params_GetOrderHistory; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetOrderHistory
        {
            public readonly string orderId = "orderId";
        }
        static readonly ActionParamsClass_GetOrderQuickSummary s_params_GetOrderQuickSummary = new ActionParamsClass_GetOrderQuickSummary();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetOrderQuickSummary GetOrderQuickSummaryParams { get { return s_params_GetOrderQuickSummary; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetOrderQuickSummary
        {
            public readonly string orderId = "orderId";
        }
        static readonly ActionParamsClass_GetOrderMessagesSummary s_params_GetOrderMessagesSummary = new ActionParamsClass_GetOrderMessagesSummary();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetOrderMessagesSummary GetOrderMessagesSummaryParams { get { return s_params_GetOrderMessagesSummary; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetOrderMessagesSummary
        {
            public readonly string orderNumber = "orderNumber";
        }
        static readonly ActionParamsClass_OnEditOrder s_params_OnEditOrder = new ActionParamsClass_OnEditOrder();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_OnEditOrder OnEditOrderParams { get { return s_params_OnEditOrder; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_OnEditOrder
        {
            public readonly string id = "id";
            public readonly string batchId = "batchId";
        }
        static readonly ActionParamsClass_OnViewComments s_params_OnViewComments = new ActionParamsClass_OnViewComments();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_OnViewComments OnViewCommentsParams { get { return s_params_OnViewComments; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_OnViewComments
        {
            public readonly string orderId = "orderId";
        }
        static readonly ActionParamsClass_SetDismissAddressValidationError s_params_SetDismissAddressValidationError = new ActionParamsClass_SetDismissAddressValidationError();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetDismissAddressValidationError SetDismissAddressValidationErrorParams { get { return s_params_SetDismissAddressValidationError; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetDismissAddressValidationError
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_SetCustomShipping s_params_SetCustomShipping = new ActionParamsClass_SetCustomShipping();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetCustomShipping SetCustomShippingParams { get { return s_params_SetCustomShipping; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetCustomShipping
        {
            public readonly string orderId = "orderId";
            public readonly string items = "items";
        }
        static readonly ActionParamsClass_GetCustomShipping s_params_GetCustomShipping = new ActionParamsClass_GetCustomShipping();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetCustomShipping GetCustomShippingParams { get { return s_params_GetCustomShipping; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetCustomShipping
        {
            public readonly string orderId = "orderId";
            public readonly string defaultShippingMethodId = "defaultShippingMethodId";
        }
        static readonly ActionParamsClass_SetTrackingNumber s_params_SetTrackingNumber = new ActionParamsClass_SetTrackingNumber();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetTrackingNumber SetTrackingNumberParams { get { return s_params_SetTrackingNumber; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetTrackingNumber
        {
            public readonly string shippings = "shippings";
        }
        static readonly ActionParamsClass_AttachOrderTo s_params_AttachOrderTo = new ActionParamsClass_AttachOrderTo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AttachOrderTo AttachOrderToParams { get { return s_params_AttachOrderTo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AttachOrderTo
        {
            public readonly string orderId = "orderId";
            public readonly string toOrderString = "toOrderString";
        }
        static readonly ActionParamsClass_CancelOrder s_params_CancelOrder = new ActionParamsClass_CancelOrder();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CancelOrder CancelOrderParams { get { return s_params_CancelOrder; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CancelOrder
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_CheckAddress s_params_CheckAddress = new ActionParamsClass_CheckAddress();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CheckAddress CheckAddressParams { get { return s_params_CheckAddress; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CheckAddress
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_Submit s_params_Submit = new ActionParamsClass_Submit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Submit SubmitParams { get { return s_params_Submit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Submit
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_GetListingsToReplace s_params_GetListingsToReplace = new ActionParamsClass_GetListingsToReplace();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetListingsToReplace GetListingsToReplaceParams { get { return s_params_GetListingsToReplace; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetListingsToReplace
        {
            public readonly string styleString = "styleString";
            public readonly string market = "market";
            public readonly string marketplaceId = "marketplaceId";
            public readonly string listingId = "listingId";
        }
        static readonly ActionParamsClass_GetSecondDay s_params_GetSecondDay = new ActionParamsClass_GetSecondDay();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetSecondDay GetSecondDayParams { get { return s_params_GetSecondDay; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetSecondDay
        {
            public readonly string request = "request";
            public readonly string dateFrom = "dateFrom";
            public readonly string dateTo = "dateTo";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _AttachOrderTo = "_AttachOrderTo";
                public readonly string _SetCustomShipping = "_SetCustomShipping";
                public readonly string _SetOrderTrackingNumber = "_SetOrderTrackingNumber";
                public readonly string FBAOrders = "FBAOrders";
                public readonly string OrderEdit = "OrderEdit";
                public readonly string OrderHistory = "OrderHistory";
                public readonly string Orders = "Orders";
                public readonly string PendingOrders = "PendingOrders";
                public readonly string SecondDayOrders = "SecondDayOrders";
                public readonly string Stats = "Stats";
                public readonly string ViewComments = "ViewComments";
            }
            public readonly string _AttachOrderTo = "~/Views/Order/_AttachOrderTo.cshtml";
            public readonly string _SetCustomShipping = "~/Views/Order/_SetCustomShipping.cshtml";
            public readonly string _SetOrderTrackingNumber = "~/Views/Order/_SetOrderTrackingNumber.cshtml";
            public readonly string FBAOrders = "~/Views/Order/FBAOrders.cshtml";
            public readonly string OrderEdit = "~/Views/Order/OrderEdit.cshtml";
            public readonly string OrderHistory = "~/Views/Order/OrderHistory.cshtml";
            public readonly string Orders = "~/Views/Order/Orders.cshtml";
            public readonly string PendingOrders = "~/Views/Order/PendingOrders.cshtml";
            public readonly string SecondDayOrders = "~/Views/Order/SecondDayOrders.cshtml";
            public readonly string Stats = "~/Views/Order/Stats.cshtml";
            public readonly string ViewComments = "~/Views/Order/ViewComments.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_OrderController : Amazon.Web.Controllers.OrderController
    {
        public T4MVC_OrderController() : base(Dummy.Instance) { }

        [NonAction]
        partial void StatsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Stats()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Stats);
            StatsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void OrdersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string orderId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Orders(string orderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Orders);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            OrdersOverride(callInfo, orderId);
            return callInfo;
        }

        [NonAction]
        partial void GetSearchHistoryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetSearchHistory()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetSearchHistory);
            GetSearchHistoryOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void FBAOrdersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string market);

        [NonAction]
        public override System.Web.Mvc.ActionResult FBAOrders(string market)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FBAOrders);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "market", market);
            FBAOrdersOverride(callInfo, market);
            return callInfo;
        }

        [NonAction]
        partial void PendingOrdersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult PendingOrders()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PendingOrders);
            PendingOrdersOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void EBayOrdersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult EBayOrders()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EBayOrders);
            EBayOrdersOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void MagentoOrdersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult MagentoOrders()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MagentoOrders);
            MagentoOrdersOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void WalmartOrdersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult WalmartOrders()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.WalmartOrders);
            WalmartOrdersOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void WalmartCAOrdersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult WalmartCAOrders()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.WalmartCAOrders);
            WalmartCAOrdersOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void JetOrdersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult JetOrders()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.JetOrders);
            JetOrdersOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SecondDayOrdersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult SecondDayOrders()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SecondDayOrders);
            SecondDayOrdersOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetFBAOrdersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Kendo.Mvc.UI.DataSourceRequest request, string dateFrom, string dateTo, string market);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetFBAOrders(Kendo.Mvc.UI.DataSourceRequest request, string dateFrom, string dateTo, string market)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetFBAOrders);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dateFrom", dateFrom);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dateTo", dateTo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "market", market);
            GetFBAOrdersOverride(callInfo, request, dateFrom, dateTo, market);
            return callInfo;
        }

        [NonAction]
        partial void GetWFSOrdersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Kendo.Mvc.UI.DataSourceRequest request, string dateFrom, string dateTo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetWFSOrders(Kendo.Mvc.UI.DataSourceRequest request, string dateFrom, string dateTo)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetWFSOrders);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dateFrom", dateFrom);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dateTo", dateTo);
            GetWFSOrdersOverride(callInfo, request, dateFrom, dateTo);
            return callInfo;
        }

        [NonAction]
        partial void GetAllUnshippedInfoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetAllUnshippedInfo()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAllUnshippedInfo);
            GetAllUnshippedInfoOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void GetOrderByIdOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long orderId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetOrderById(long orderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetOrderById);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            GetOrderByIdOverride(callInfo, orderId);
            return callInfo;
        }

        [NonAction]
        partial void GetOrdersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Amazon.Web.ViewModels.Grid.GridRequest request, int? market, string marketplaceId, string orderStatus, string shippingStatus, string dateFrom, string dateTo, string buyerName, string orderNumber, long? batchId, long? dropShipperId, string styleId, long? styleItemId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetOrders(Amazon.Web.ViewModels.Grid.GridRequest request, int? market, string marketplaceId, string orderStatus, string shippingStatus, string dateFrom, string dateTo, string buyerName, string orderNumber, long? batchId, long? dropShipperId, string styleId, long? styleItemId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetOrders);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "market", market);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "marketplaceId", marketplaceId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderStatus", orderStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "shippingStatus", shippingStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dateFrom", dateFrom);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dateTo", dateTo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "buyerName", buyerName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderNumber", orderNumber);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "batchId", batchId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dropShipperId", dropShipperId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleId", styleId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleItemId", styleItemId);
            GetOrdersOverride(callInfo, request, market, marketplaceId, orderStatus, shippingStatus, dateFrom, dateTo, buyerName, orderNumber, batchId, dropShipperId, styleId, styleItemId);
            return callInfo;
        }

        [NonAction]
        partial void GetPendingOrdersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Kendo.Mvc.UI.DataSourceRequest request, int? market, string marketplaceId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetPendingOrders(Kendo.Mvc.UI.DataSourceRequest request, int? market, string marketplaceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPendingOrders);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "market", market);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "marketplaceId", marketplaceId);
            GetPendingOrdersOverride(callInfo, request, market, marketplaceId);
            return callInfo;
        }

        [NonAction]
        partial void SetOnHoldOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool onHold);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetOnHold(int id, bool onHold)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetOnHold);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "onHold", onHold);
            SetOnHoldOverride(callInfo, id, onHold);
            return callInfo;
        }

        [NonAction]
        partial void SetIsOversoldOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool isOversold);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetIsOversold(int id, bool isOversold)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetIsOversold);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isOversold", isOversold);
            SetIsOversoldOverride(callInfo, id, isOversold);
            return callInfo;
        }

        [NonAction]
        partial void SetRefundLockedOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool isRefundLocked);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetRefundLocked(int id, bool isRefundLocked)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetRefundLocked);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isRefundLocked", isRefundLocked);
            SetRefundLockedOverride(callInfo, id, isRefundLocked);
            return callInfo;
        }

        [NonAction]
        partial void SetShippingOptionsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string orderId, int groupId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetShippingOptions(int id, string orderId, int groupId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetShippingOptions);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "groupId", groupId);
            SetShippingOptionsOverride(callInfo, id, orderId, groupId);
            return callInfo;
        }

        [NonAction]
        partial void GetFileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string fileName);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetFile(string fileName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetFile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileName", fileName);
            GetFileOverride(callInfo, fileName);
            return callInfo;
        }

        [NonAction]
        partial void OrderHistoryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string orderId);

        [NonAction]
        public override System.Web.Mvc.ActionResult OrderHistory(string orderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OrderHistory);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            OrderHistoryOverride(callInfo, orderId);
            return callInfo;
        }

        [NonAction]
        partial void GetOrderHistoryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string orderId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetOrderHistory(string orderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetOrderHistory);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            GetOrderHistoryOverride(callInfo, orderId);
            return callInfo;
        }

        [NonAction]
        partial void GetOrderQuickSummaryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string orderId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetOrderQuickSummary(string orderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetOrderQuickSummary);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            GetOrderQuickSummaryOverride(callInfo, orderId);
            return callInfo;
        }

        [NonAction]
        partial void GetOrderMessagesSummaryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string orderNumber);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetOrderMessagesSummary(string orderNumber)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetOrderMessagesSummary);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderNumber", orderNumber);
            GetOrderMessagesSummaryOverride(callInfo, orderNumber);
            return callInfo;
        }

        [NonAction]
        partial void OnEditOrderOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id, long? batchId);

        [NonAction]
        public override System.Web.Mvc.ActionResult OnEditOrder(long id, long? batchId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OnEditOrder);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "batchId", batchId);
            OnEditOrderOverride(callInfo, id, batchId);
            return callInfo;
        }

        [NonAction]
        partial void OnViewCommentsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long orderId);

        [NonAction]
        public override System.Web.Mvc.ActionResult OnViewComments(long orderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OnViewComments);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            OnViewCommentsOverride(callInfo, orderId);
            return callInfo;
        }

        [NonAction]
        partial void SetDismissAddressValidationErrorOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetDismissAddressValidationError(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetDismissAddressValidationError);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            SetDismissAddressValidationErrorOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void SetCustomShippingOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long orderId, System.Collections.Generic.IList<Amazon.Web.ViewModels.Orders.CustomShippingItemViewModel> items);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetCustomShipping(long orderId, System.Collections.Generic.IList<Amazon.Web.ViewModels.Orders.CustomShippingItemViewModel> items)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetCustomShipping);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "items", items);
            SetCustomShippingOverride(callInfo, orderId, items);
            return callInfo;
        }

        [NonAction]
        partial void GetCustomShippingOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long orderId, long? defaultShippingMethodId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetCustomShipping(long orderId, long? defaultShippingMethodId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetCustomShipping);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "defaultShippingMethodId", defaultShippingMethodId);
            GetCustomShippingOverride(callInfo, orderId, defaultShippingMethodId);
            return callInfo;
        }

        [NonAction]
        partial void SetTrackingNumberOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Collections.Generic.IList<Amazon.Web.ViewModels.Orders.OrderShippingViewModel> shippings);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetTrackingNumber(System.Collections.Generic.IList<Amazon.Web.ViewModels.Orders.OrderShippingViewModel> shippings)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetTrackingNumber);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "shippings", shippings);
            SetTrackingNumberOverride(callInfo, shippings);
            return callInfo;
        }

        [NonAction]
        partial void AttachOrderToOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long orderId, string toOrderString);

        [NonAction]
        public override System.Web.Mvc.ActionResult AttachOrderTo(long orderId, string toOrderString)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AttachOrderTo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "toOrderString", toOrderString);
            AttachOrderToOverride(callInfo, orderId, toOrderString);
            return callInfo;
        }

        [NonAction]
        partial void CancelOrderOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult CancelOrder(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CancelOrder);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            CancelOrderOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void CheckAddressOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Amazon.Web.ViewModels.OrderEditViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult CheckAddress(Amazon.Web.ViewModels.OrderEditViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CheckAddress);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            CheckAddressOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void SubmitOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Amazon.Web.ViewModels.OrderEditViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult Submit(Amazon.Web.ViewModels.OrderEditViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Submit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            SubmitOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void GetListingsToReplaceOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string styleString, int market, string marketplaceId, long listingId);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetListingsToReplace(string styleString, int market, string marketplaceId, long listingId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetListingsToReplace);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "styleString", styleString);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "market", market);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "marketplaceId", marketplaceId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "listingId", listingId);
            GetListingsToReplaceOverride(callInfo, styleString, market, marketplaceId, listingId);
            return callInfo;
        }

        [NonAction]
        partial void GetSecondDayOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Kendo.Mvc.UI.DataSourceRequest request, string dateFrom, string dateTo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetSecondDay(Kendo.Mvc.UI.DataSourceRequest request, string dateFrom, string dateTo)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetSecondDay);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "request", request);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dateFrom", dateFrom);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dateTo", dateTo);
            GetSecondDayOverride(callInfo, request, dateFrom, dateTo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
