using System;
using System.Configuration;
using Amazon.Common.Helpers;

namespace Ccen.Model.SyncService
{
    /// <summary>
    /// This class was generated by the AppSettings T4 template
    /// </summary>
    public static class AppSettings
    {
        public static string log4net_Config { get { return GetConfigSettingItem<string>("log4net.Config"); } }
        public static string JavaPath { get { return GetConfigSettingItem<string>("JavaPath"); } }
        public static string ReportCallbackIntervalSeconds { get { return GetConfigSettingItem<string>("ReportCallbackIntervalSeconds"); } }
        public static string ReportBaseDirectory { get { return GetConfigSettingItem<string>("ReportBaseDirectory"); } }
        public static string FulfillmentResponseDirectory { get { return GetConfigSettingItem<string>("FulfillmentResponseDirectory"); } }
        public static string FulfillmentRequestDirectory { get { return GetConfigSettingItem<string>("FulfillmentRequestDirectory"); } }
        public static string DefaultCustomType { get { return GetConfigSettingItem<string>("DefaultCustomType"); } }
        public static string LabelDirectory { get { return GetConfigSettingItem<string>("LabelDirectory"); } }
        public static string ReserveDirectory { get { return GetConfigSettingItem<string>("ReserveDirectory"); } }
        public static string TemplateDirectory { get { return GetConfigSettingItem<string>("TemplateDirectory"); } }
        public static string SwatchImageDirectory { get { return GetConfigSettingItem<string>("SwatchImageDirectory"); } }
        public static string SwatchImageBaseUrl { get { return GetConfigSettingItem<string>("SwatchImageBaseUrl"); } }
        public static string WalmartImageDirectory { get { return GetConfigSettingItem<string>("WalmartImageDirectory"); } }
        public static string WalmartImageBaseUrl { get { return GetConfigSettingItem<string>("WalmartImageBaseUrl"); } }
        public static string JetImageDirectory { get { return GetConfigSettingItem<string>("JetImageDirectory"); } }
        public static string JetImageBaseUrl { get { return GetConfigSettingItem<string>("JetImageBaseUrl"); } }
        public static string eBayImageDirectory { get { return GetConfigSettingItem<string>("eBayImageDirectory"); } }
        public static string eBayImageBaseUrl { get { return GetConfigSettingItem<string>("eBayImageBaseUrl"); } }
        public static string WalmartFeedBaseDirectory { get { return GetConfigSettingItem<string>("WalmartFeedBaseDirectory"); } }
        public static string WalmartReportBaseDirectory { get { return GetConfigSettingItem<string>("WalmartReportBaseDirectory"); } }
        public static string UpdateListingsIntervalMinutes { get { return GetConfigSettingItem<string>("UpdateListingsIntervalMinutes"); } }
        public static string UpdateListingsOpenIntervalMinutes { get { return GetConfigSettingItem<string>("UpdateListingsOpenIntervalMinutes"); } }
        public static string UpdateListingsLiteIntervalMinutes { get { return GetConfigSettingItem<string>("UpdateListingsLiteIntervalMinutes"); } }
        public static string UpdateListingsDefectIntervalMinutes { get { return GetConfigSettingItem<string>("UpdateListingsDefectIntervalMinutes"); } }
        public static string UpdateListingsPriceOnAmazonIntervalMinutes { get { return GetConfigSettingItem<string>("UpdateListingsPriceOnAmazonIntervalMinutes"); } }
        public static string UpdateListingsQtyOnAmazonIntervalMinutes { get { return GetConfigSettingItem<string>("UpdateListingsQtyOnAmazonIntervalMinutes"); } }
        public static string UpdateFBAListingsIntervalMinutes { get { return GetConfigSettingItem<string>("UpdateFBAListingsIntervalMinutes"); } }
        public static string UpdateFBAListingsFeeIntervalMinutes { get { return GetConfigSettingItem<string>("UpdateFBAListingsFeeIntervalMinutes"); } }
        public static string UpdateRatingIntervalMinutes { get { return GetConfigSettingItem<string>("UpdateRatingIntervalMinutes"); } }
        public static string UpdateFulfillmentIntervalMinutes { get { return GetConfigSettingItem<string>("UpdateFulfillmentIntervalMinutes"); } }
        public static string UpdateQuantityDistributionIntervalMinutes { get { return GetConfigSettingItem<string>("UpdateQuantityDistributionIntervalMinutes"); } }
        public static string UpdateBuyBoxIntervalMinutes { get { return GetConfigSettingItem<string>("UpdateBuyBoxIntervalMinutes"); } }
        public static string UpdateSalesEndIntervalMinutes { get { return GetConfigSettingItem<string>("UpdateSalesEndIntervalMinutes"); } }
        public static string UpdateOrderTrackingStatusIntervalMinutes { get { return GetConfigSettingItem<string>("UpdateOrderTrackingStatusIntervalMinutes"); } }
        public static string UpdateEmailsIntervalMinutes { get { return GetConfigSettingItem<string>("UpdateEmailsIntervalMinutes"); } }
        public static string UpdateAmazonImageInvervalMinutes { get { return GetConfigSettingItem<string>("UpdateAmazonImageInvervalMinutes"); } }
        public static string ProcessAmazonOrdersIntervalMinutes { get { return GetConfigSettingItem<string>("ProcessAmazonOrdersIntervalMinutes"); } }
        public static string ProcessEBayOrdersIntervalMinutes { get { return GetConfigSettingItem<string>("ProcessEBayOrdersIntervalMinutes"); } }
        public static string ProcessJetOrdersIntervalMinutes { get { return GetConfigSettingItem<string>("ProcessJetOrdersIntervalMinutes"); } }
        public static string UpdateQuantityFixupMinutes { get { return GetConfigSettingItem<string>("UpdateQuantityFixupMinutes"); } }
        public static string AwaitReadyReportIntervalMinutes { get { return GetConfigSettingItem<string>("AwaitReadyReportIntervalMinutes"); } }
        public static string MaxReportRequestAttempt { get { return GetConfigSettingItem<string>("MaxReportRequestAttempt"); } }
        public static string ReportRequestAttemptIntervalMinutes { get { return GetConfigSettingItem<string>("ReportRequestAttemptIntervalMinutes"); } }
        public static TimeSpan OverdueAutoPurchaseTime { get { return GetConfigSettingItem<TimeSpan>("OverdueAutoPurchaseTime"); } }
        public static TimeSpan SameDayCheckTime { get { return GetConfigSettingItem<TimeSpan>("SameDayCheckTime"); } }
        public static TimeSpan SameDayAutoPurchaseTime { get { return GetConfigSettingItem<TimeSpan>("SameDayAutoPurchaseTime"); } }
        public static int AmazonFulfillmentLatencyDays { get { return GetConfigSettingItem<int>("AmazonFulfillmentLatencyDays"); } }
        public static int WalmartFulfillmentLatencyDays { get { return GetConfigSettingItem<int>("WalmartFulfillmentLatencyDays"); } }
        public static string Support_ProcessMessageThreadTimeoutSecond { get { return GetConfigSettingItem<string>("Support_ProcessMessageThreadTimeoutSecond"); } }
        public static string Support_MaxProcessMessageErrorsCount { get { return GetConfigSettingItem<string>("Support_MaxProcessMessageErrorsCount"); } }
        public static bool IsSampleLabels { get { return GetConfigSettingItem<bool>("IsSampleLabels"); } }
        public static bool IsDebug { get { return GetConfigSettingItem<bool>("IsDebug"); } }
        public static bool IsEnableSendQtyUpdates { get { return GetConfigSettingItem<bool>("IsEnableSendQtyUpdates"); } }
        public static bool IsEnableSendPriceUpdates { get { return GetConfigSettingItem<bool>("IsEnableSendPriceUpdates"); } }
        public static bool IsEnableSendItemUpdates { get { return GetConfigSettingItem<bool>("IsEnableSendItemUpdates"); } }
        public static bool IsEnableSendOrderFulfillment { get { return GetConfigSettingItem<bool>("IsEnableSendOrderFulfillment"); } }
        public static bool IsEnableSendCancelations { get { return GetConfigSettingItem<bool>("IsEnableSendCancelations"); } }
        public static bool IsDemo { get { return GetConfigSettingItem<bool>("IsDemo"); } }
    
        private const string MISSING_CONFIG = "Invalid configuration. Required AppSettings section is missing";
        private const string INVALID_CONFIG_SETTING = "Invalid configuration setting name: {0}";

        private static T GetConfigSettingItem<T>(string name)
        {
            if (ConfigurationManager.AppSettings == null)
                throw new ConfigurationErrorsException(MISSING_CONFIG);

            T value = default(T);
            if (ConfigurationManager.AppSettings.Count != 0)
            {
                try 
                {
                    value = AppConfigWrapper.Instance.GetValue<T>(name);
                } 
                catch (Exception exception)
                {
                    throw new ConfigurationErrorsException(SettingItemErrorMessage(name, exception));
                }
            }
            return value;
        }
        
        private static string SettingItemErrorMessage(string name)
        {
            return string.Format(INVALID_CONFIG_SETTING, name);
        }

        private static string SettingItemErrorMessage(string name, Exception exception)
        {
            return string.Format(INVALID_CONFIG_SETTING, name) + exception.Message;
        }
    }
}
